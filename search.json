[
  {
    "objectID": "sobre.html",
    "href": "sobre.html",
    "title": "Sobre Nós",
    "section": "",
    "text": "Somos um grupo de estudantes apaixonados da FAE com experiências diversas em ciência da computação, estatística, finanças e ciência de dados. Nossos esforços colaborativos se concentram na resolução de problemas do mundo real usando abordagens orientadas por dados."
  },
  {
    "objectID": "sobre.html#nossa-equipe",
    "href": "sobre.html#nossa-equipe",
    "title": "Sobre Nós",
    "section": "",
    "text": "Somos um grupo de estudantes apaixonados da FAE com experiências diversas em ciência da computação, estatística, finanças e ciência de dados. Nossos esforços colaborativos se concentram na resolução de problemas do mundo real usando abordagens orientadas por dados."
  },
  {
    "objectID": "sobre.html#membros-da-equipe",
    "href": "sobre.html#membros-da-equipe",
    "title": "Sobre Nós",
    "section": "Membros da Equipe",
    "text": "Membros da Equipe\n\n\nGabriel Prado\nFunção: Engenheiro de Vendas\nHabilidades: Python, SQL, Análise de Dados, Metodologias Ágeis, Organização, Trabalho em Equipe\n\n\n\n\n\nJosé Marcos\nFunção: Analista de Riscos\nHabilidades: Apresentação de Dados, Manipulação de Dados, Visualização de Dados, Estatística\n\n\n\n\n\nLucas Kainã\nFunção: Analista de Negócios\nHabilidades: Análise Financeira, Análise Exploratória de dados, Modelagem Preditiva\n\n\n\n\n\nArthur Liz\nFunção: Analista Financeiro\nHabilidades: Análise financeira, Modelagem preditiva, Python, R, SQL, Power BI, Looker Studio, Tableau"
  },
  {
    "objectID": "sobre.html#nossa-abordagem",
    "href": "sobre.html#nossa-abordagem",
    "title": "Sobre Nós",
    "section": "Nossa Abordagem",
    "text": "Nossa Abordagem\nAcreditamos na aprendizagem colaborativa e na aplicação prática de técnicas de ciência de dados. Nossos projetos combinam conhecimento acadêmico com aplicações do mundo real, particularmente no setor financeiro.\nNosso fluxo de trabalho geralmente inclui:\n\nDefinição do problema e pesquisa\nColeta e pré-processamento de dados\nAnálise exploratória de dados\nDesenvolvimento e teste de modelos\nVisualização e comunicação de resultados\nMelhoria contínua e iteração"
  },
  {
    "objectID": "sobre.html#informações-do-curso",
    "href": "sobre.html#informações-do-curso",
    "title": "Sobre Nós",
    "section": "Informações do Curso",
    "text": "Informações do Curso\nEste portfólio foi criado como parte do curso Big Data for Finance Project na FAE Business School. Conduzida por:\n\nProfessor Rodrigo H. Ozon"
  },
  {
    "objectID": "projetos.html",
    "href": "projetos.html",
    "title": "Nossos Projetos",
    "section": "",
    "text": "Este projeto se concentra na análise de grandes conjuntos de dados financeiros para extrair insights e padrões significativos. Implementamos vários algoritmos de machine learning para prever movimentos do mercado e identificar oportunidades de investimento.\n\n\n\n\nAnálise de Séries Temporais\nProcessamento de Linguagem Natural para Análise de Sentimento de Notícias\nMachine Learning para Previsão\nVisualizações Interativas\n\n\n\n\n\nDescobrimos correlação entre o sentimento nas redes sociais e os movimentos do mercado\nCriamos um modelo preditivo com 78% de precisão para mudanças de preço de curto prazo\nDesenvolvemos um painel interativo para análise de mercado em tempo real\n\n\n\n\n\nMontando a carteira de investimentos do grupo (07/03)\nCriamos um modelo preditivo com 78% de precisão para mudanças de preço de curto prazo\nDesenvolvemos um painel interativo para análise de mercado em tempo real"
  },
  {
    "objectID": "projetos.html#big-data-for-finance-project",
    "href": "projetos.html#big-data-for-finance-project",
    "title": "Nossos Projetos",
    "section": "",
    "text": "Este projeto se concentra na análise de grandes conjuntos de dados financeiros para extrair insights e padrões significativos. Implementamos vários algoritmos de machine learning para prever movimentos do mercado e identificar oportunidades de investimento.\n\n\n\n\nAnálise de Séries Temporais\nProcessamento de Linguagem Natural para Análise de Sentimento de Notícias\nMachine Learning para Previsão\nVisualizações Interativas\n\n\n\n\n\nDescobrimos correlação entre o sentimento nas redes sociais e os movimentos do mercado\nCriamos um modelo preditivo com 78% de precisão para mudanças de preço de curto prazo\nDesenvolvemos um painel interativo para análise de mercado em tempo real\n\n\n\n\n\nMontando a carteira de investimentos do grupo (07/03)\nCriamos um modelo preditivo com 78% de precisão para mudanças de preço de curto prazo\nDesenvolvemos um painel interativo para análise de mercado em tempo real"
  },
  {
    "objectID": "projetos.html#outros-projetos",
    "href": "projetos.html#outros-projetos",
    "title": "Nossos Projetos",
    "section": "Outros Projetos",
    "text": "Outros Projetos\n\nDesafio de Visualização de Dados\nUm projeto de visualização que transforma dados financeiros complexos em gráficos intuitivos e interativos para melhor tomada de decisões.\n\n\nSimulação de Negociação Algorítmica\nDesenvolvemos um ambiente de negociação simulado para testar várias estratégias algorítmicas contra dados históricos do mercado.\n\n\nFerramenta de Avaliação de Risco Financeiro\nCriamos uma ferramenta que avalia carteiras de investimento e fornece avaliações de risco com base na volatilidade do mercado e nas correlações de ativos."
  },
  {
    "objectID": "portfolio/semana1.html",
    "href": "portfolio/semana1.html",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Neste projeto, analisaremos uma carteira de investimentos composta por seis empresas líderes de tecnologia. A seleção foi feita com base na relevância destas empresas no setor tecnológico, sua capitalização de mercado e potencial de crescimento.\n\n\n\nNossa carteira é composta pelos seguintes ativos:\n\nNVDA (NVIDIA Corporation)\nAAPL (Apple Inc.)\nTSLA (Tesla, Inc.)\nMETA (Meta Platforms, Inc.)\nAMZN (Amazon.com, Inc.)\nMSFT (Microsoft Corporation)\n\n\n\n\nA carteira foi estruturada com base nos seguintes critérios:\n\nDiversificação dentro do setor tecnológico: Embora todas sejam empresas de tecnologia, cada uma atua em segmentos distintos - hardware, software, redes sociais, comércio eletrônico, veículos elétricos e inteligência artificial.\nExposição à inovação: Todas as empresas selecionadas investem fortemente em pesquisa e desenvolvimento, com foco em tecnologias emergentes como inteligência artificial, realidade aumentada, computação em nuvem e veículos autônomos.\nLiderança de mercado: Todas são líderes em seus respectivos segmentos, com forte presença global e vantagens competitivas significativas.\nPotencial de crescimento: Apesar de já serem empresas consolidadas, continuam apresentando perspectivas de crescimento em novos mercados e através de inovações disruptivas.\n\n\n\n\nPara este projeto, utilizaremos o pacote quantmod em R para coletar os dados históricos de preços das ações selecionadas. Vamos coletar dados dos últimos 2 anos:\n\n\nCode\n# Carregando as bibliotecas necessárias\nlibrary(quantmod)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(corrplot)\nlibrary(RColorBrewer)\nlibrary(scales)\n\n# Definindo os tickers da nossa carteira\ntickers &lt;- c(\"NVDA\", \"AAPL\", \"TSLA\", \"META\", \"AMZN\", \"MSFT\")\n\n# Definindo o período de análise (últimos 2 anos)\nend_date &lt;- Sys.Date()\nstart_date &lt;- end_date - 365*2\n\n# Configurando o ambiente gráfico\noptions(repr.plot.width = 12, repr.plot.height = 8)\n\n# Função para adicionar sufixo ao ticker para Yahoo Finance\nadd_yahoo_suffix &lt;- function(ticker) {\n  return(paste0(ticker, \".US\"))\n}\n\n# Coletando dados históricos\ngetSymbols(tickers, src = \"yahoo\", from = start_date, to = end_date)\n\n\n[1] \"NVDA\" \"AAPL\" \"TSLA\" \"META\" \"AMZN\" \"MSFT\"\n\n\nCode\n# Exibindo as primeiras linhas dos dados da NVIDIA como exemplo\nhead(NVDA)\n\n\n           NVDA.Open NVDA.High NVDA.Low NVDA.Close NVDA.Volume NVDA.Adjusted\n2023-04-06    26.584    27.080   26.427     27.037   397654000      27.01945\n2023-04-10    26.823    27.621   26.669     27.579   395279000      27.56110\n2023-04-11    27.724    27.790   27.126     27.169   314378000      27.15137\n2023-04-12    27.370    27.468   26.448     26.495   446259000      26.47780\n2023-04-13    26.734    26.887   26.329     26.463   353615000      26.44582\n2023-04-14    26.504    26.883   26.220     26.758   395660000      26.74063\n\n\n\n\n\nVamos organizar os dados para facilitar as análises:\n\n\nCode\n# Função para extrair preços de fechamento ajustados\nget_adjusted_prices &lt;- function(ticker) {\n  return(Ad(get(ticker)))\n}\n\n# Criando um dataframe com os preços de fechamento ajustados\nclosing_prices &lt;- do.call(merge, lapply(tickers, get_adjusted_prices))\ncolnames(closing_prices) &lt;- tickers\n\n# Visualizando as primeiras linhas\nhead(closing_prices)\n\n\n               NVDA     AAPL   TSLA     META   AMZN     MSFT\n2023-04-06 27.01945 163.0160 185.06 215.0863 102.06 287.0349\n2023-04-10 27.56110 160.4123 184.51 213.7426 102.17 284.8595\n2023-04-11 27.15137 159.1946 186.79 212.8469  99.92 278.4021\n2023-04-12 26.47780 158.5016 180.54 212.9961  97.83 279.0518\n2023-04-13 26.44582 163.9070 185.90 219.3164 102.40 285.3024\n2023-04-14 26.74063 163.5606 185.00 220.4510 102.51 281.6603\n\n\nCode\n# Convertendo para dataframe para facilitar algumas manipulações\nclosing_prices_df &lt;- as.data.frame(closing_prices)\nclosing_prices_df$date &lt;- as.Date(rownames(closing_prices_df))\n\n\n\n\n\nVamos visualizar a evolução dos preços de fechamento ajustados para cada ativo ao longo do tempo:\n\n\nCode\n# Transformando os dados para o formato longo (tidy)\nprices_long &lt;- closing_prices_df %&gt;%\n  pivot_longer(cols = all_of(tickers), \n               names_to = \"symbol\", \n               values_to = \"price\")\n\n# Plotando os preços de fechamento ajustados\nggplot(prices_long, aes(x = date, y = price, color = symbol)) +\n  geom_line(linewidth = 1) +\n  labs(title = \"Preços de Fechamento Ajustados\",\n       x = \"Data\", \n       y = \"Preço ($)\",\n       color = \"Ticker\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10)\n  ) +\n  scale_y_continuous(labels = dollar_format())\n\n\n\n\n\n\n\n\n\nPara facilitar a comparação entre os ativos, vamos normalizar os preços para base 100:\n\n\nCode\n# Calculando preços normalizados\nfirst_prices &lt;- closing_prices_df[1, tickers]\nnormalized_prices &lt;- closing_prices_df\n\nfor (ticker in tickers) {\n  normalized_prices[[ticker]] &lt;- closing_prices_df[[ticker]] / first_prices[[ticker]] * 100\n}\n\n# Transformando para o formato longo\nnormalized_long &lt;- normalized_prices %&gt;%\n  pivot_longer(cols = all_of(tickers), \n               names_to = \"symbol\", \n               values_to = \"normalized_price\")\n\n# Plotando os preços normalizados\nggplot(normalized_long, aes(x = date, y = normalized_price, color = symbol)) +\n  geom_line(linewidth = 1) +\n  labs(title = \"Preços Normalizados (Base 100)\",\n       x = \"Data\", \n       y = \"Preço Normalizado\",\n       color = \"Ticker\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nVamos calcular e visualizar os retornos diários, bem como algumas estatísticas importantes:\n\n\nCode\n# Calculando retornos diários\nreturns &lt;- ROC(closing_prices, type = \"discrete\", n = 1)\nreturns &lt;- returns[-1,]  # Removendo a primeira linha (NA)\n\n# Exibindo estatísticas descritivas\nreturns_stats &lt;- data.frame(\n  Ticker = tickers,\n  Mínimo = apply(returns, 2, min, na.rm = TRUE),\n  Q1 = apply(returns, 2, function(x) quantile(x, 0.25, na.rm = TRUE)),\n  Mediana = apply(returns, 2, median, na.rm = TRUE),\n  Média = apply(returns, 2, mean, na.rm = TRUE),\n  Q3 = apply(returns, 2, function(x) quantile(x, 0.75, na.rm = TRUE)),\n  Máximo = apply(returns, 2, max, na.rm = TRUE),\n  Volatilidade_Diária = apply(returns, 2, sd, na.rm = TRUE),\n  Volatilidade_Anual = apply(returns, 2, sd, na.rm = TRUE) * sqrt(252)\n)\n\n# Formatando os números para percentuais\nreturns_stats[, 2:9] &lt;- round(returns_stats[, 2:9] * 100, 2)\n\n# Exibindo estatísticas\nknitr::kable(returns_stats, caption = \"Estatísticas dos Retornos Diários (%)\")\n\n\n\nEstatísticas dos Retornos Diários (%)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTicker\nMínimo\nQ1\nMediana\nMédia\nQ3\nMáximo\nVolatilidade_Diária\nVolatilidade_Anual\n\n\n\n\nNVDA\nNVDA\n-16.97\n-1.60\n0.32\n0.30\n2.20\n24.37\n3.32\n52.70\n\n\nAAPL\nAAPL\n-9.25\n-0.69\n0.12\n0.04\n0.82\n7.26\n1.49\n23.69\n\n\nTSLA\nTSLA\n-15.43\n-2.01\n0.05\n0.12\n2.08\n21.92\n3.77\n59.89\n\n\nMETA\nMETA\n-10.56\n-0.91\n0.15\n0.19\n1.29\n20.32\n2.20\n35.00\n\n\nAMZN\nAMZN\n-8.98\n-0.90\n0.07\n0.12\n1.30\n8.27\n1.89\n30.07\n\n\nMSFT\nMSFT\n-6.18\n-0.71\n0.12\n0.05\n0.92\n7.24\n1.39\n22.09\n\n\n\n\n\n\n\nVamos visualizar a distribuição dos retornos diários para cada ativo:\n\n\nCode\n# Convertendo returns para dataframe\nreturns_df &lt;- as.data.frame(returns)\nreturns_df$date &lt;- as.Date(rownames(returns_df))\n\n# Transformando para o formato longo\nreturns_long &lt;- returns_df %&gt;%\n  pivot_longer(cols = all_of(tickers), \n               names_to = \"symbol\", \n               values_to = \"return\")\n\n# Plotando histogramas dos retornos\nggplot(returns_long, aes(x = return)) +\n  geom_histogram(aes(y = ..density..), bins = 30, fill = \"steelblue\", alpha = 0.7) +\n  geom_density(color = \"red\", linewidth = 1) +\n  geom_vline(aes(xintercept = mean(return, na.rm = TRUE)), \n             color = \"darkred\", linetype = \"dashed\", linewidth = 1) +\n  facet_wrap(~symbol, scales = \"free_y\", ncol = 2) +\n  labs(title = \"Distribuição dos Retornos Diários\",\n       x = \"Retorno Diário\", \n       y = \"Densidade\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    strip.text = element_text(size = 12, face = \"bold\")\n  ) +\n  scale_x_continuous(labels = percent_format())\n\n\n\n\n\n\n\n\n\n\n\n\n\nVamos analisar a correlação entre os retornos das ações para entender como esses ativos se movimentam em relação uns aos outros:\n\n\nCode\n# Calculando a matriz de correlação\ncorrelation_matrix &lt;- cor(returns, use = \"complete.obs\")\n\n# Visualizando a matriz de correlação\ncorrplot(correlation_matrix, method = \"color\", \n         type = \"upper\", order = \"hclust\", \n         addCoef.col = \"black\", \n         tl.col = \"black\", tl.srt = 45,\n         col = brewer.pal(n = 8, name = \"RdYlBu\"),\n         title = \"Matriz de Correlação dos Retornos Diários\",\n         mar = c(0,0,2,0))\n\n\n\n\n\n\n\n\n\n\n\n\nVamos comparar o risco (volatilidade) e o retorno médio anualizado de cada ativo:\n\n\nCode\n# Calculando retornos médios anualizados e volatilidade anualizada\nmean_return &lt;- colMeans(returns, na.rm = TRUE) * 252\nvolatility &lt;- apply(returns, 2, sd, na.rm = TRUE) * sqrt(252)\n\n# Criando um dataframe para visualização\nrisk_return &lt;- data.frame(\n  Ticker = tickers,\n  Retorno_Anualizado = mean_return,\n  Volatilidade = volatility\n)\n\n# Exibindo a tabela\nknitr::kable(risk_return, digits = 4, \n             col.names = c(\"Ticker\", \"Retorno Anualizado\", \"Volatilidade\"),\n             caption = \"Análise de Risco-Retorno\")\n\n\n\nAnálise de Risco-Retorno\n\n\n\nTicker\nRetorno Anualizado\nVolatilidade\n\n\n\n\nNVDA\nNVDA\n0.7678\n0.5270\n\n\nAAPL\nAAPL\n0.1011\n0.2369\n\n\nTSLA\nTSLA\n0.3074\n0.5989\n\n\nMETA\nMETA\n0.4902\n0.3500\n\n\nAMZN\nAMZN\n0.3054\n0.3007\n\n\nMSFT\nMSFT\n0.1384\n0.2209\n\n\n\n\n\n\n\n\n\nCode\n# Calculando médias para divisão dos quadrantes\navg_ret &lt;- mean(risk_return$Retorno_Anualizado)\navg_vol &lt;- mean(risk_return$Volatilidade)\n\n# Criando o gráfico de risco x retorno\nggplot(risk_return, aes(x = Volatilidade, y = Retorno_Anualizado)) +\n  geom_point(aes(color = Ticker), size = 5) +\n  geom_text(aes(label = Ticker), hjust = -0.3, vjust = 0, size = 4) +\n  geom_hline(yintercept = avg_ret, linetype = \"dashed\", color = \"red\", alpha = 0.5) +\n  geom_vline(xintercept = avg_vol, linetype = \"dashed\", color = \"red\", alpha = 0.5) +\n  annotate(\"text\", x = avg_vol * 1.05, y = avg_ret * 1.05, \n           label = \"Alto Retorno\\nAlto Risco\", \n           hjust = 0, vjust = 0, size = 3.5) +\n  annotate(\"text\", x = avg_vol * 0.95, y = avg_ret * 1.05, \n           label = \"Alto Retorno\\nBaixo Risco\", \n           hjust = 1, vjust = 0, size = 3.5) +\n  annotate(\"text\", x = avg_vol * 1.05, y = avg_ret * 0.95, \n           label = \"Baixo Retorno\\nAlto Risco\", \n           hjust = 0, vjust = 1, size = 3.5) +\n  annotate(\"text\", x = avg_vol * 0.95, y = avg_ret * 0.95, \n           label = \"Baixo Retorno\\nBaixo Risco\", \n           hjust = 1, vjust = 1, size = 3.5) +\n  labs(title = \"Análise de Risco x Retorno\",\n       x = \"Risco (Volatilidade Anualizada)\", \n       y = \"Retorno Médio Anualizado\",\n       color = \"Ticker\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.position = \"top\"\n  ) +\n  scale_y_continuous(labels = percent_format()) +\n  scale_x_continuous(labels = percent_format())\n\n\n\n\n\n\n\n\n\n\n\n\n\nVamos calcular e visualizar o retorno cumulativo para cada ativo:\n\n\nCode\n# Calculando retorno cumulativo\ncumulative_returns &lt;- cumprod(1 + returns) - 1\n\n# Convertendo para dataframe\ncumret_df &lt;- as.data.frame(cumulative_returns)\ncumret_df$date &lt;- as.Date(rownames(cumret_df))\n\n# Transformando para o formato longo\ncumret_long &lt;- cumret_df %&gt;%\n  pivot_longer(cols = all_of(tickers), \n               names_to = \"symbol\", \n               values_to = \"cum_return\")\n\n# Plotando retorno cumulativo\nggplot(cumret_long, aes(x = date, y = cum_return, color = symbol)) +\n  geom_line(linewidth = 1) +\n  labs(title = \"Retorno Cumulativo\",\n       x = \"Data\", \n       y = \"Retorno Cumulativo\",\n       color = \"Ticker\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10)\n  ) +\n  scale_y_continuous(labels = percent_format())\n\n\n\n\n\n\n\n\n\n\n\n\nVamos analisar o volume de negociação para cada ativo:\n\n\nCode\n# Função para extrair volume\nget_volume &lt;- function(ticker) {\n  return(Vo(get(ticker)))\n}\n\n# Obtendo dados de volume\nvolumes &lt;- do.call(merge, lapply(tickers, get_volume))\ncolnames(volumes) &lt;- tickers\n\n# Calculando volume médio diário\navg_volume &lt;- colMeans(volumes, na.rm = TRUE)\navg_volume_df &lt;- data.frame(\n  Ticker = tickers,\n  Volume_Medio = avg_volume\n)\n\n# Ordenando por volume\navg_volume_df &lt;- avg_volume_df[order(avg_volume_df$Volume_Medio, decreasing = TRUE), ]\navg_volume_df$Ticker &lt;- factor(avg_volume_df$Ticker, levels = avg_volume_df$Ticker)\n\n# Plotando o volume médio de negociação\nggplot(avg_volume_df, aes(x = Ticker, y = Volume_Medio / 1e6)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  geom_text(aes(label = sprintf(\"%.1f M\", Volume_Medio / 1e6)), \n            vjust = -0.5, size = 4) +\n  labs(title = \"Volume Médio Diário de Negociação\",\n       x = \"Ticker\", \n       y = \"Volume Médio (Milhões)\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    axis.text.x = element_text(size = 10, angle = 0)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nVamos calcular a volatilidade móvel para analisar como a volatilidade de cada ativo evolui ao longo do tempo:\n\n\nCode\n# Função para calcular volatilidade móvel\ncalculate_rolling_vol &lt;- function(returns_xts, window_size = 30) {\n  roll_vol &lt;- rollapply(returns_xts, width = window_size, \n                        FUN = function(x) sd(x, na.rm = TRUE) * sqrt(252),\n                        by.column = TRUE, align = \"right\")\n  return(roll_vol)\n}\n\n# Calculando volatilidade móvel (janela de 30 dias)\nrolling_vol &lt;- calculate_rolling_vol(returns, window_size = 30)\n\n# Convertendo para dataframe\nroll_vol_df &lt;- as.data.frame(rolling_vol)\nroll_vol_df$date &lt;- as.Date(rownames(roll_vol_df))\n\n# Transformando para o formato longo\nroll_vol_long &lt;- roll_vol_df %&gt;%\n  pivot_longer(cols = all_of(tickers), \n               names_to = \"symbol\", \n               values_to = \"volatility\")\n\n# Plotando a volatilidade móvel\nggplot(roll_vol_long, aes(x = date, y = volatility, color = symbol)) +\n  geom_line(linewidth = 1) +\n  labs(title = \"Volatilidade Móvel (30 dias)\",\n       x = \"Data\", \n       y = \"Volatilidade Anualizada\",\n       color = \"Ticker\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10)\n  ) +\n  scale_y_continuous(labels = percent_format())\n\n\n\n\n\n\n\n\n\n\n\n\nO Índice Sharpe é uma medida importante que ajuda a avaliar o retorno ajustado ao risco:\n\n\nCode\n# Assumindo taxa livre de risco de 4% ao ano\nrisk_free_rate &lt;- 0.04/252\n\n# Calculando Sharpe Ratio para cada ativo\nsharpe_ratio &lt;- (colMeans(returns, na.rm = TRUE) - risk_free_rate) / \n                 apply(returns, 2, sd, na.rm = TRUE) * sqrt(252)\n\nsharpe_df &lt;- data.frame(\n  Ticker = tickers,\n  Sharpe_Ratio = sharpe_ratio\n)\n\n# Ordenando por Sharpe Ratio\nsharpe_df &lt;- sharpe_df[order(sharpe_df$Sharpe_Ratio, decreasing = TRUE), ]\nsharpe_df$Ticker &lt;- factor(sharpe_df$Ticker, levels = sharpe_df$Ticker)\n\n# Plotando o Sharpe Ratio\nggplot(sharpe_df, aes(x = Ticker, y = Sharpe_Ratio)) +\n  geom_bar(stat = \"identity\", fill = \"darkgreen\") +\n  geom_text(aes(label = sprintf(\"%.2f\", Sharpe_Ratio)), \n            vjust = -0.5, size = 4) +\n  labs(title = \"Índice de Sharpe (Anualizado)\",\n       subtitle = \"Taxa livre de risco = 4%\",\n       x = \"Ticker\", \n       y = \"Sharpe Ratio\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    plot.subtitle = element_text(size = 12),\n    axis.title = element_text(size = 12),\n    axis.text.x = element_text(size = 10, angle = 0)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nNa próxima etapa do projeto, iremos:\n\nRealizar uma análise mais aprofundada do desempenho histórico desses ativos\nCalcular métricas adicionais como Sortino Ratio e Maximum Drawdown\nOtimizar a alocação de ativos usando técnicas como a Teoria Moderna de Portfólio\nRealizar backtesting de diferentes estratégias de rebalanceamento\nAnalisar a exposição da carteira a diferentes fatores de risco\n\n\n\n\nCom base nas análises realizadas, podemos destacar os seguintes pontos:\n\nDesempenho: Observamos diferenças significativas no desempenho dos ativos selecionados, com alguns apresentando retornos superiores à média do grupo.\nCorrelação: A matriz de correlação mostra que, apesar de todas serem empresas de tecnologia, há diversificação significativa dentro da carteira.\nRisco-Retorno: O gráfico de risco x retorno nos permite identificar quais ativos oferecem melhor relação entre retorno e volatilidade.\nVolatilidade: A análise de volatilidade móvel mostra períodos de maior e menor instabilidade no mercado, afetando todos os ativos.\nEficiência: A análise do Índice de Sharpe revela quais ativos oferecem melhor retorno ajustado ao risco.\n\nEsta análise preliminar nos dá uma base para entender o comportamento dos ativos selecionados e a dinâmica entre eles, orientando nossas decisões futuras de investimento."
  },
  {
    "objectID": "portfolio/semana1.html#introdução",
    "href": "portfolio/semana1.html#introdução",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Neste projeto, analisaremos uma carteira de investimentos composta por seis empresas líderes de tecnologia. A seleção foi feita com base na relevância destas empresas no setor tecnológico, sua capitalização de mercado e potencial de crescimento."
  },
  {
    "objectID": "portfolio/semana1.html#seleção-de-empresas",
    "href": "portfolio/semana1.html#seleção-de-empresas",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Nossa carteira é composta pelos seguintes ativos:\n\nNVDA (NVIDIA Corporation)\nAAPL (Apple Inc.)\nTSLA (Tesla, Inc.)\nMETA (Meta Platforms, Inc.)\nAMZN (Amazon.com, Inc.)\nMSFT (Microsoft Corporation)"
  },
  {
    "objectID": "portfolio/semana1.html#justificativa-da-escolha",
    "href": "portfolio/semana1.html#justificativa-da-escolha",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "A carteira foi estruturada com base nos seguintes critérios:\n\nDiversificação dentro do setor tecnológico: Embora todas sejam empresas de tecnologia, cada uma atua em segmentos distintos - hardware, software, redes sociais, comércio eletrônico, veículos elétricos e inteligência artificial.\nExposição à inovação: Todas as empresas selecionadas investem fortemente em pesquisa e desenvolvimento, com foco em tecnologias emergentes como inteligência artificial, realidade aumentada, computação em nuvem e veículos autônomos.\nLiderança de mercado: Todas são líderes em seus respectivos segmentos, com forte presença global e vantagens competitivas significativas.\nPotencial de crescimento: Apesar de já serem empresas consolidadas, continuam apresentando perspectivas de crescimento em novos mercados e através de inovações disruptivas."
  },
  {
    "objectID": "portfolio/semana1.html#coleta-de-dados",
    "href": "portfolio/semana1.html#coleta-de-dados",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Para este projeto, utilizaremos o pacote quantmod em R para coletar os dados históricos de preços das ações selecionadas. Vamos coletar dados dos últimos 2 anos:\n\n\nCode\n# Carregando as bibliotecas necessárias\nlibrary(quantmod)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(corrplot)\nlibrary(RColorBrewer)\nlibrary(scales)\n\n# Definindo os tickers da nossa carteira\ntickers &lt;- c(\"NVDA\", \"AAPL\", \"TSLA\", \"META\", \"AMZN\", \"MSFT\")\n\n# Definindo o período de análise (últimos 2 anos)\nend_date &lt;- Sys.Date()\nstart_date &lt;- end_date - 365*2\n\n# Configurando o ambiente gráfico\noptions(repr.plot.width = 12, repr.plot.height = 8)\n\n# Função para adicionar sufixo ao ticker para Yahoo Finance\nadd_yahoo_suffix &lt;- function(ticker) {\n  return(paste0(ticker, \".US\"))\n}\n\n# Coletando dados históricos\ngetSymbols(tickers, src = \"yahoo\", from = start_date, to = end_date)\n\n\n[1] \"NVDA\" \"AAPL\" \"TSLA\" \"META\" \"AMZN\" \"MSFT\"\n\n\nCode\n# Exibindo as primeiras linhas dos dados da NVIDIA como exemplo\nhead(NVDA)\n\n\n           NVDA.Open NVDA.High NVDA.Low NVDA.Close NVDA.Volume NVDA.Adjusted\n2023-04-06    26.584    27.080   26.427     27.037   397654000      27.01945\n2023-04-10    26.823    27.621   26.669     27.579   395279000      27.56110\n2023-04-11    27.724    27.790   27.126     27.169   314378000      27.15137\n2023-04-12    27.370    27.468   26.448     26.495   446259000      26.47780\n2023-04-13    26.734    26.887   26.329     26.463   353615000      26.44582\n2023-04-14    26.504    26.883   26.220     26.758   395660000      26.74063"
  },
  {
    "objectID": "portfolio/semana1.html#preparação-dos-dados",
    "href": "portfolio/semana1.html#preparação-dos-dados",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Vamos organizar os dados para facilitar as análises:\n\n\nCode\n# Função para extrair preços de fechamento ajustados\nget_adjusted_prices &lt;- function(ticker) {\n  return(Ad(get(ticker)))\n}\n\n# Criando um dataframe com os preços de fechamento ajustados\nclosing_prices &lt;- do.call(merge, lapply(tickers, get_adjusted_prices))\ncolnames(closing_prices) &lt;- tickers\n\n# Visualizando as primeiras linhas\nhead(closing_prices)\n\n\n               NVDA     AAPL   TSLA     META   AMZN     MSFT\n2023-04-06 27.01945 163.0160 185.06 215.0863 102.06 287.0349\n2023-04-10 27.56110 160.4123 184.51 213.7426 102.17 284.8595\n2023-04-11 27.15137 159.1946 186.79 212.8469  99.92 278.4021\n2023-04-12 26.47780 158.5016 180.54 212.9961  97.83 279.0518\n2023-04-13 26.44582 163.9070 185.90 219.3164 102.40 285.3024\n2023-04-14 26.74063 163.5606 185.00 220.4510 102.51 281.6603\n\n\nCode\n# Convertendo para dataframe para facilitar algumas manipulações\nclosing_prices_df &lt;- as.data.frame(closing_prices)\nclosing_prices_df$date &lt;- as.Date(rownames(closing_prices_df))"
  },
  {
    "objectID": "portfolio/semana1.html#análise-da-evolução-dos-preços",
    "href": "portfolio/semana1.html#análise-da-evolução-dos-preços",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Vamos visualizar a evolução dos preços de fechamento ajustados para cada ativo ao longo do tempo:\n\n\nCode\n# Transformando os dados para o formato longo (tidy)\nprices_long &lt;- closing_prices_df %&gt;%\n  pivot_longer(cols = all_of(tickers), \n               names_to = \"symbol\", \n               values_to = \"price\")\n\n# Plotando os preços de fechamento ajustados\nggplot(prices_long, aes(x = date, y = price, color = symbol)) +\n  geom_line(linewidth = 1) +\n  labs(title = \"Preços de Fechamento Ajustados\",\n       x = \"Data\", \n       y = \"Preço ($)\",\n       color = \"Ticker\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10)\n  ) +\n  scale_y_continuous(labels = dollar_format())\n\n\n\n\n\n\n\n\n\nPara facilitar a comparação entre os ativos, vamos normalizar os preços para base 100:\n\n\nCode\n# Calculando preços normalizados\nfirst_prices &lt;- closing_prices_df[1, tickers]\nnormalized_prices &lt;- closing_prices_df\n\nfor (ticker in tickers) {\n  normalized_prices[[ticker]] &lt;- closing_prices_df[[ticker]] / first_prices[[ticker]] * 100\n}\n\n# Transformando para o formato longo\nnormalized_long &lt;- normalized_prices %&gt;%\n  pivot_longer(cols = all_of(tickers), \n               names_to = \"symbol\", \n               values_to = \"normalized_price\")\n\n# Plotando os preços normalizados\nggplot(normalized_long, aes(x = date, y = normalized_price, color = symbol)) +\n  geom_line(linewidth = 1) +\n  labs(title = \"Preços Normalizados (Base 100)\",\n       x = \"Data\", \n       y = \"Preço Normalizado\",\n       color = \"Ticker\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10)\n  )"
  },
  {
    "objectID": "portfolio/semana1.html#análise-de-retornos",
    "href": "portfolio/semana1.html#análise-de-retornos",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Vamos calcular e visualizar os retornos diários, bem como algumas estatísticas importantes:\n\n\nCode\n# Calculando retornos diários\nreturns &lt;- ROC(closing_prices, type = \"discrete\", n = 1)\nreturns &lt;- returns[-1,]  # Removendo a primeira linha (NA)\n\n# Exibindo estatísticas descritivas\nreturns_stats &lt;- data.frame(\n  Ticker = tickers,\n  Mínimo = apply(returns, 2, min, na.rm = TRUE),\n  Q1 = apply(returns, 2, function(x) quantile(x, 0.25, na.rm = TRUE)),\n  Mediana = apply(returns, 2, median, na.rm = TRUE),\n  Média = apply(returns, 2, mean, na.rm = TRUE),\n  Q3 = apply(returns, 2, function(x) quantile(x, 0.75, na.rm = TRUE)),\n  Máximo = apply(returns, 2, max, na.rm = TRUE),\n  Volatilidade_Diária = apply(returns, 2, sd, na.rm = TRUE),\n  Volatilidade_Anual = apply(returns, 2, sd, na.rm = TRUE) * sqrt(252)\n)\n\n# Formatando os números para percentuais\nreturns_stats[, 2:9] &lt;- round(returns_stats[, 2:9] * 100, 2)\n\n# Exibindo estatísticas\nknitr::kable(returns_stats, caption = \"Estatísticas dos Retornos Diários (%)\")\n\n\n\nEstatísticas dos Retornos Diários (%)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTicker\nMínimo\nQ1\nMediana\nMédia\nQ3\nMáximo\nVolatilidade_Diária\nVolatilidade_Anual\n\n\n\n\nNVDA\nNVDA\n-16.97\n-1.60\n0.32\n0.30\n2.20\n24.37\n3.32\n52.70\n\n\nAAPL\nAAPL\n-9.25\n-0.69\n0.12\n0.04\n0.82\n7.26\n1.49\n23.69\n\n\nTSLA\nTSLA\n-15.43\n-2.01\n0.05\n0.12\n2.08\n21.92\n3.77\n59.89\n\n\nMETA\nMETA\n-10.56\n-0.91\n0.15\n0.19\n1.29\n20.32\n2.20\n35.00\n\n\nAMZN\nAMZN\n-8.98\n-0.90\n0.07\n0.12\n1.30\n8.27\n1.89\n30.07\n\n\nMSFT\nMSFT\n-6.18\n-0.71\n0.12\n0.05\n0.92\n7.24\n1.39\n22.09\n\n\n\n\n\n\n\nVamos visualizar a distribuição dos retornos diários para cada ativo:\n\n\nCode\n# Convertendo returns para dataframe\nreturns_df &lt;- as.data.frame(returns)\nreturns_df$date &lt;- as.Date(rownames(returns_df))\n\n# Transformando para o formato longo\nreturns_long &lt;- returns_df %&gt;%\n  pivot_longer(cols = all_of(tickers), \n               names_to = \"symbol\", \n               values_to = \"return\")\n\n# Plotando histogramas dos retornos\nggplot(returns_long, aes(x = return)) +\n  geom_histogram(aes(y = ..density..), bins = 30, fill = \"steelblue\", alpha = 0.7) +\n  geom_density(color = \"red\", linewidth = 1) +\n  geom_vline(aes(xintercept = mean(return, na.rm = TRUE)), \n             color = \"darkred\", linetype = \"dashed\", linewidth = 1) +\n  facet_wrap(~symbol, scales = \"free_y\", ncol = 2) +\n  labs(title = \"Distribuição dos Retornos Diários\",\n       x = \"Retorno Diário\", \n       y = \"Densidade\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    strip.text = element_text(size = 12, face = \"bold\")\n  ) +\n  scale_x_continuous(labels = percent_format())"
  },
  {
    "objectID": "portfolio/semana1.html#análise-de-correlação",
    "href": "portfolio/semana1.html#análise-de-correlação",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Vamos analisar a correlação entre os retornos das ações para entender como esses ativos se movimentam em relação uns aos outros:\n\n\nCode\n# Calculando a matriz de correlação\ncorrelation_matrix &lt;- cor(returns, use = \"complete.obs\")\n\n# Visualizando a matriz de correlação\ncorrplot(correlation_matrix, method = \"color\", \n         type = \"upper\", order = \"hclust\", \n         addCoef.col = \"black\", \n         tl.col = \"black\", tl.srt = 45,\n         col = brewer.pal(n = 8, name = \"RdYlBu\"),\n         title = \"Matriz de Correlação dos Retornos Diários\",\n         mar = c(0,0,2,0))"
  },
  {
    "objectID": "portfolio/semana1.html#análise-de-risco-e-retorno",
    "href": "portfolio/semana1.html#análise-de-risco-e-retorno",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Vamos comparar o risco (volatilidade) e o retorno médio anualizado de cada ativo:\n\n\nCode\n# Calculando retornos médios anualizados e volatilidade anualizada\nmean_return &lt;- colMeans(returns, na.rm = TRUE) * 252\nvolatility &lt;- apply(returns, 2, sd, na.rm = TRUE) * sqrt(252)\n\n# Criando um dataframe para visualização\nrisk_return &lt;- data.frame(\n  Ticker = tickers,\n  Retorno_Anualizado = mean_return,\n  Volatilidade = volatility\n)\n\n# Exibindo a tabela\nknitr::kable(risk_return, digits = 4, \n             col.names = c(\"Ticker\", \"Retorno Anualizado\", \"Volatilidade\"),\n             caption = \"Análise de Risco-Retorno\")\n\n\n\nAnálise de Risco-Retorno\n\n\n\nTicker\nRetorno Anualizado\nVolatilidade\n\n\n\n\nNVDA\nNVDA\n0.7678\n0.5270\n\n\nAAPL\nAAPL\n0.1011\n0.2369\n\n\nTSLA\nTSLA\n0.3074\n0.5989\n\n\nMETA\nMETA\n0.4902\n0.3500\n\n\nAMZN\nAMZN\n0.3054\n0.3007\n\n\nMSFT\nMSFT\n0.1384\n0.2209\n\n\n\n\n\n\n\n\n\nCode\n# Calculando médias para divisão dos quadrantes\navg_ret &lt;- mean(risk_return$Retorno_Anualizado)\navg_vol &lt;- mean(risk_return$Volatilidade)\n\n# Criando o gráfico de risco x retorno\nggplot(risk_return, aes(x = Volatilidade, y = Retorno_Anualizado)) +\n  geom_point(aes(color = Ticker), size = 5) +\n  geom_text(aes(label = Ticker), hjust = -0.3, vjust = 0, size = 4) +\n  geom_hline(yintercept = avg_ret, linetype = \"dashed\", color = \"red\", alpha = 0.5) +\n  geom_vline(xintercept = avg_vol, linetype = \"dashed\", color = \"red\", alpha = 0.5) +\n  annotate(\"text\", x = avg_vol * 1.05, y = avg_ret * 1.05, \n           label = \"Alto Retorno\\nAlto Risco\", \n           hjust = 0, vjust = 0, size = 3.5) +\n  annotate(\"text\", x = avg_vol * 0.95, y = avg_ret * 1.05, \n           label = \"Alto Retorno\\nBaixo Risco\", \n           hjust = 1, vjust = 0, size = 3.5) +\n  annotate(\"text\", x = avg_vol * 1.05, y = avg_ret * 0.95, \n           label = \"Baixo Retorno\\nAlto Risco\", \n           hjust = 0, vjust = 1, size = 3.5) +\n  annotate(\"text\", x = avg_vol * 0.95, y = avg_ret * 0.95, \n           label = \"Baixo Retorno\\nBaixo Risco\", \n           hjust = 1, vjust = 1, size = 3.5) +\n  labs(title = \"Análise de Risco x Retorno\",\n       x = \"Risco (Volatilidade Anualizada)\", \n       y = \"Retorno Médio Anualizado\",\n       color = \"Ticker\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.position = \"top\"\n  ) +\n  scale_y_continuous(labels = percent_format()) +\n  scale_x_continuous(labels = percent_format())"
  },
  {
    "objectID": "portfolio/semana1.html#análise-de-desempenho-cumulativo",
    "href": "portfolio/semana1.html#análise-de-desempenho-cumulativo",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Vamos calcular e visualizar o retorno cumulativo para cada ativo:\n\n\nCode\n# Calculando retorno cumulativo\ncumulative_returns &lt;- cumprod(1 + returns) - 1\n\n# Convertendo para dataframe\ncumret_df &lt;- as.data.frame(cumulative_returns)\ncumret_df$date &lt;- as.Date(rownames(cumret_df))\n\n# Transformando para o formato longo\ncumret_long &lt;- cumret_df %&gt;%\n  pivot_longer(cols = all_of(tickers), \n               names_to = \"symbol\", \n               values_to = \"cum_return\")\n\n# Plotando retorno cumulativo\nggplot(cumret_long, aes(x = date, y = cum_return, color = symbol)) +\n  geom_line(linewidth = 1) +\n  labs(title = \"Retorno Cumulativo\",\n       x = \"Data\", \n       y = \"Retorno Cumulativo\",\n       color = \"Ticker\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10)\n  ) +\n  scale_y_continuous(labels = percent_format())"
  },
  {
    "objectID": "portfolio/semana1.html#volume-de-negociação",
    "href": "portfolio/semana1.html#volume-de-negociação",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Vamos analisar o volume de negociação para cada ativo:\n\n\nCode\n# Função para extrair volume\nget_volume &lt;- function(ticker) {\n  return(Vo(get(ticker)))\n}\n\n# Obtendo dados de volume\nvolumes &lt;- do.call(merge, lapply(tickers, get_volume))\ncolnames(volumes) &lt;- tickers\n\n# Calculando volume médio diário\navg_volume &lt;- colMeans(volumes, na.rm = TRUE)\navg_volume_df &lt;- data.frame(\n  Ticker = tickers,\n  Volume_Medio = avg_volume\n)\n\n# Ordenando por volume\navg_volume_df &lt;- avg_volume_df[order(avg_volume_df$Volume_Medio, decreasing = TRUE), ]\navg_volume_df$Ticker &lt;- factor(avg_volume_df$Ticker, levels = avg_volume_df$Ticker)\n\n# Plotando o volume médio de negociação\nggplot(avg_volume_df, aes(x = Ticker, y = Volume_Medio / 1e6)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  geom_text(aes(label = sprintf(\"%.1f M\", Volume_Medio / 1e6)), \n            vjust = -0.5, size = 4) +\n  labs(title = \"Volume Médio Diário de Negociação\",\n       x = \"Ticker\", \n       y = \"Volume Médio (Milhões)\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    axis.text.x = element_text(size = 10, angle = 0)\n  )"
  },
  {
    "objectID": "portfolio/semana1.html#análise-de-volatilidade-ao-longo-do-tempo",
    "href": "portfolio/semana1.html#análise-de-volatilidade-ao-longo-do-tempo",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Vamos calcular a volatilidade móvel para analisar como a volatilidade de cada ativo evolui ao longo do tempo:\n\n\nCode\n# Função para calcular volatilidade móvel\ncalculate_rolling_vol &lt;- function(returns_xts, window_size = 30) {\n  roll_vol &lt;- rollapply(returns_xts, width = window_size, \n                        FUN = function(x) sd(x, na.rm = TRUE) * sqrt(252),\n                        by.column = TRUE, align = \"right\")\n  return(roll_vol)\n}\n\n# Calculando volatilidade móvel (janela de 30 dias)\nrolling_vol &lt;- calculate_rolling_vol(returns, window_size = 30)\n\n# Convertendo para dataframe\nroll_vol_df &lt;- as.data.frame(rolling_vol)\nroll_vol_df$date &lt;- as.Date(rownames(roll_vol_df))\n\n# Transformando para o formato longo\nroll_vol_long &lt;- roll_vol_df %&gt;%\n  pivot_longer(cols = all_of(tickers), \n               names_to = \"symbol\", \n               values_to = \"volatility\")\n\n# Plotando a volatilidade móvel\nggplot(roll_vol_long, aes(x = date, y = volatility, color = symbol)) +\n  geom_line(linewidth = 1) +\n  labs(title = \"Volatilidade Móvel (30 dias)\",\n       x = \"Data\", \n       y = \"Volatilidade Anualizada\",\n       color = \"Ticker\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10)\n  ) +\n  scale_y_continuous(labels = percent_format())"
  },
  {
    "objectID": "portfolio/semana1.html#análise-de-sharpe-ratio",
    "href": "portfolio/semana1.html#análise-de-sharpe-ratio",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "O Índice Sharpe é uma medida importante que ajuda a avaliar o retorno ajustado ao risco:\n\n\nCode\n# Assumindo taxa livre de risco de 4% ao ano\nrisk_free_rate &lt;- 0.04/252\n\n# Calculando Sharpe Ratio para cada ativo\nsharpe_ratio &lt;- (colMeans(returns, na.rm = TRUE) - risk_free_rate) / \n                 apply(returns, 2, sd, na.rm = TRUE) * sqrt(252)\n\nsharpe_df &lt;- data.frame(\n  Ticker = tickers,\n  Sharpe_Ratio = sharpe_ratio\n)\n\n# Ordenando por Sharpe Ratio\nsharpe_df &lt;- sharpe_df[order(sharpe_df$Sharpe_Ratio, decreasing = TRUE), ]\nsharpe_df$Ticker &lt;- factor(sharpe_df$Ticker, levels = sharpe_df$Ticker)\n\n# Plotando o Sharpe Ratio\nggplot(sharpe_df, aes(x = Ticker, y = Sharpe_Ratio)) +\n  geom_bar(stat = \"identity\", fill = \"darkgreen\") +\n  geom_text(aes(label = sprintf(\"%.2f\", Sharpe_Ratio)), \n            vjust = -0.5, size = 4) +\n  labs(title = \"Índice de Sharpe (Anualizado)\",\n       subtitle = \"Taxa livre de risco = 4%\",\n       x = \"Ticker\", \n       y = \"Sharpe Ratio\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    plot.subtitle = element_text(size = 12),\n    axis.title = element_text(size = 12),\n    axis.text.x = element_text(size = 10, angle = 0)\n  )"
  },
  {
    "objectID": "portfolio/semana1.html#próximos-passos",
    "href": "portfolio/semana1.html#próximos-passos",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Na próxima etapa do projeto, iremos:\n\nRealizar uma análise mais aprofundada do desempenho histórico desses ativos\nCalcular métricas adicionais como Sortino Ratio e Maximum Drawdown\nOtimizar a alocação de ativos usando técnicas como a Teoria Moderna de Portfólio\nRealizar backtesting de diferentes estratégias de rebalanceamento\nAnalisar a exposição da carteira a diferentes fatores de risco"
  },
  {
    "objectID": "portfolio/semana1.html#conclusões-preliminares",
    "href": "portfolio/semana1.html#conclusões-preliminares",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Com base nas análises realizadas, podemos destacar os seguintes pontos:\n\nDesempenho: Observamos diferenças significativas no desempenho dos ativos selecionados, com alguns apresentando retornos superiores à média do grupo.\nCorrelação: A matriz de correlação mostra que, apesar de todas serem empresas de tecnologia, há diversificação significativa dentro da carteira.\nRisco-Retorno: O gráfico de risco x retorno nos permite identificar quais ativos oferecem melhor relação entre retorno e volatilidade.\nVolatilidade: A análise de volatilidade móvel mostra períodos de maior e menor instabilidade no mercado, afetando todos os ativos.\nEficiência: A análise do Índice de Sharpe revela quais ativos oferecem melhor retorno ajustado ao risco.\n\nEsta análise preliminar nos dá uma base para entender o comportamento dos ativos selecionados e a dinâmica entre eles, orientando nossas decisões futuras de investimento."
  },
  {
    "objectID": "portfolio/index.html",
    "href": "portfolio/index.html",
    "title": "Portfólio - CLAPS",
    "section": "",
    "text": "Somos um grupo de estudantes do curso de Ciência de Dados da FAE Business School, trabalhando juntos em vários projetos de ciência de dados e big data. Este portfólio apresenta nosso trabalho colaborativo e nossas conquistas."
  },
  {
    "objectID": "portfolio/index.html#bem-vindo-ao-nosso-portfólio",
    "href": "portfolio/index.html#bem-vindo-ao-nosso-portfólio",
    "title": "Portfólio - CLAPS",
    "section": "",
    "text": "Somos um grupo de estudantes do curso de Ciência de Dados da FAE Business School, trabalhando juntos em vários projetos de ciência de dados e big data. Este portfólio apresenta nosso trabalho colaborativo e nossas conquistas."
  },
  {
    "objectID": "portfolio/index.html#projeto-em-destaque",
    "href": "portfolio/index.html#projeto-em-destaque",
    "title": "Portfólio - CLAPS",
    "section": "Projeto em Destaque",
    "text": "Projeto em Destaque\n\n\n\n\n\n\nBig Data for Finance Project\nNosso projeto principal envolve a análise de dados do mercado financeiro para identificar padrões e fazer previsões. Implementamos vários algoritmos de machine learning e técnicas de visualização.\nVer Detalhes do Projeto →"
  },
  {
    "objectID": "portfolio/index.html#membros-do-grupo",
    "href": "portfolio/index.html#membros-do-grupo",
    "title": "Portfólio - CLAPS",
    "section": "Membros do Grupo",
    "text": "Membros do Grupo\n\nGabriel Prado - Engenheiro de Vendas/Gestão de Projetos\nJosé Marcos - Analista de Risco/Programação\nLucas Kainã - Analista de Negócios/Finanças Corporativas\nArthur Liz - Analista Financeiro/Gestão Operacional"
  },
  {
    "objectID": "portfolio/index.html#tecnologias-que-utilizamos",
    "href": "portfolio/index.html#tecnologias-que-utilizamos",
    "title": "Portfólio - CLAPS",
    "section": "Tecnologias que Utilizamos",
    "text": "Tecnologias que Utilizamos\n\nR/Python para Análise de Dados\nQuarto para Documentação\nGitHub para Colaboração\nBibliotecas de Machine Learning\nIntegração com APIs Financeiras"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Portfólio - CLAPS",
    "section": "",
    "text": "Somos um grupo de estudantes do curso de Ciência de Dados da FAE Business School, trabalhando juntos em vários projetos de ciência de dados e big data. Este portfólio apresenta nosso trabalho colaborativo e nossas conquistas."
  },
  {
    "objectID": "index.html#bem-vindo-ao-nosso-portfólio",
    "href": "index.html#bem-vindo-ao-nosso-portfólio",
    "title": "Portfólio - CLAPS",
    "section": "",
    "text": "Somos um grupo de estudantes do curso de Ciência de Dados da FAE Business School, trabalhando juntos em vários projetos de ciência de dados e big data. Este portfólio apresenta nosso trabalho colaborativo e nossas conquistas."
  },
  {
    "objectID": "index.html#projeto-em-destaque",
    "href": "index.html#projeto-em-destaque",
    "title": "Portfólio - CLAPS",
    "section": "Projeto em Destaque",
    "text": "Projeto em Destaque\n\n\n\n\n\n\nBig Data for Finance Project\nNosso projeto principal envolve a análise de dados do mercado financeiro para identificar padrões e fazer previsões. Implementamos vários algoritmos de machine learning e técnicas de visualização.\nVer Detalhes do Projeto →"
  },
  {
    "objectID": "index.html#membros-do-grupo",
    "href": "index.html#membros-do-grupo",
    "title": "Portfólio - CLAPS",
    "section": "Membros do Grupo",
    "text": "Membros do Grupo\n\nGabriel Prado - Engenheiro de Vendas/Gestão de Projetos\nJosé Marcos - Analista de Risco/Programação\nLucas Kainã - Analista de Negócios/Finanças Corporativas\nArthur Liz - Analista Financeiro/Gestão Operacional"
  },
  {
    "objectID": "index.html#tecnologias-que-utilizamos",
    "href": "index.html#tecnologias-que-utilizamos",
    "title": "Portfólio - CLAPS",
    "section": "Tecnologias que Utilizamos",
    "text": "Tecnologias que Utilizamos\n\nR/Python para Análise de Dados\nQuarto para Documentação\nGitHub para Colaboração\nBibliotecas de Machine Learning\nIntegração com APIs Financeiras"
  },
  {
    "objectID": "portfolio/projetos.html",
    "href": "portfolio/projetos.html",
    "title": "Nossos Projetos",
    "section": "",
    "text": "Este projeto se concentra na análise de grandes conjuntos de dados financeiros para extrair insights e padrões significativos. Implementamos vários algoritmos de machine learning para prever movimentos do mercado e identificar oportunidades de investimento.\n\n\n\n\nAnálise de Séries Temporais\nProcessamento de Linguagem Natural para Análise de Sentimento de Notícias\nMachine Learning para Previsão\nVisualizações Interativas\n\n\n\n\n\nDescobrimos correlação entre o sentimento nas redes sociais e os movimentos do mercado\nCriamos um modelo preditivo com 78% de precisão para mudanças de preço de curto prazo\nDesenvolvemos um painel interativo para análise de mercado em tempo real\n\n\n\n\n\nMontando a carteira de investimentos do grupo (07/03)\nCriamos um modelo preditivo com 78% de precisão para mudanças de preço de curto prazo\nDesenvolvemos um painel interativo para análise de mercado em tempo real"
  },
  {
    "objectID": "portfolio/projetos.html#big-data-for-finance-project",
    "href": "portfolio/projetos.html#big-data-for-finance-project",
    "title": "Nossos Projetos",
    "section": "",
    "text": "Este projeto se concentra na análise de grandes conjuntos de dados financeiros para extrair insights e padrões significativos. Implementamos vários algoritmos de machine learning para prever movimentos do mercado e identificar oportunidades de investimento.\n\n\n\n\nAnálise de Séries Temporais\nProcessamento de Linguagem Natural para Análise de Sentimento de Notícias\nMachine Learning para Previsão\nVisualizações Interativas\n\n\n\n\n\nDescobrimos correlação entre o sentimento nas redes sociais e os movimentos do mercado\nCriamos um modelo preditivo com 78% de precisão para mudanças de preço de curto prazo\nDesenvolvemos um painel interativo para análise de mercado em tempo real\n\n\n\n\n\nMontando a carteira de investimentos do grupo (07/03)\nCriamos um modelo preditivo com 78% de precisão para mudanças de preço de curto prazo\nDesenvolvemos um painel interativo para análise de mercado em tempo real"
  },
  {
    "objectID": "portfolio/projetos.html#outros-projetos",
    "href": "portfolio/projetos.html#outros-projetos",
    "title": "Nossos Projetos",
    "section": "Outros Projetos",
    "text": "Outros Projetos\n\nDesafio de Visualização de Dados\nUm projeto de visualização que transforma dados financeiros complexos em gráficos intuitivos e interativos para melhor tomada de decisões.\n\n\nSimulação de Negociação Algorítmica\nDesenvolvemos um ambiente de negociação simulado para testar várias estratégias algorítmicas contra dados históricos do mercado.\n\n\nFerramenta de Avaliação de Risco Financeiro\nCriamos uma ferramenta que avalia carteiras de investimento e fornece avaliações de risco com base na volatilidade do mercado e nas correlações de ativos."
  },
  {
    "objectID": "portfolio/sobre.html",
    "href": "portfolio/sobre.html",
    "title": "Sobre Nós",
    "section": "",
    "text": "Somos um grupo de estudantes apaixonados da FAE com experiências diversas em ciência da computação, estatística, finanças e ciência de dados. Nossos esforços colaborativos se concentram na resolução de problemas do mundo real usando abordagens orientadas por dados."
  },
  {
    "objectID": "portfolio/sobre.html#nossa-equipe",
    "href": "portfolio/sobre.html#nossa-equipe",
    "title": "Sobre Nós",
    "section": "",
    "text": "Somos um grupo de estudantes apaixonados da FAE com experiências diversas em ciência da computação, estatística, finanças e ciência de dados. Nossos esforços colaborativos se concentram na resolução de problemas do mundo real usando abordagens orientadas por dados."
  },
  {
    "objectID": "portfolio/sobre.html#membros-da-equipe",
    "href": "portfolio/sobre.html#membros-da-equipe",
    "title": "Sobre Nós",
    "section": "Membros da Equipe",
    "text": "Membros da Equipe\n\n\nGabriel Prado\nFunção: Engenheiro de Vendas\nHabilidades: Python, SQL, Análise de Dados, Metodologias Ágeis, Organização, Trabalho em Equipe\n\n\n\n\n\nJosé Marcos\nFunção: Analista de Riscos\nHabilidades: Apresentação de Dados, Manipulação de Dados, Visualização de Dados, Estatística\n\n\n\n\n\nLucas Kainã\nFunção: Analista de Negócios\nHabilidades: Análise Financeira, Análise Exploratória de dados, Modelagem Preditiva\n\n\n\n\n\nArthur Liz\nFunção: Analista Financeiro\nHabilidades: Análise financeira, Modelagem preditiva, Python, R, SQL, Power BI, Looker Studio, Tableau"
  },
  {
    "objectID": "portfolio/sobre.html#nossa-abordagem",
    "href": "portfolio/sobre.html#nossa-abordagem",
    "title": "Sobre Nós",
    "section": "Nossa Abordagem",
    "text": "Nossa Abordagem\nAcreditamos na aprendizagem colaborativa e na aplicação prática de técnicas de ciência de dados. Nossos projetos combinam conhecimento acadêmico com aplicações do mundo real, particularmente no setor financeiro.\nNosso fluxo de trabalho geralmente inclui:\n\nDefinição do problema e pesquisa\nColeta e pré-processamento de dados\nAnálise exploratória de dados\nDesenvolvimento e teste de modelos\nVisualização e comunicação de resultados\nMelhoria contínua e iteração"
  },
  {
    "objectID": "portfolio/sobre.html#informações-do-curso",
    "href": "portfolio/sobre.html#informações-do-curso",
    "title": "Sobre Nós",
    "section": "Informações do Curso",
    "text": "Informações do Curso\nEste portfólio foi criado como parte do curso Big Data for Finance Project na FAE Business School. Conduzida por:\n\nProfessor Rodrigo H. Ozon"
  },
  {
    "objectID": "semana1.html",
    "href": "semana1.html",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Neste projeto, analisaremos uma carteira de investimentos composta por seis empresas líderes de tecnologia. A seleção foi feita com base na relevância destas empresas no setor tecnológico, sua capitalização de mercado e potencial de crescimento.\n\n\n\nNossa carteira é composta pelos seguintes ativos:\n\nNVDA (NVIDIA Corporation)\nAAPL (Apple Inc.)\nTSLA (Tesla, Inc.)\nMETA (Meta Platforms, Inc.)\nAMZN (Amazon.com, Inc.)\nMSFT (Microsoft Corporation)\n\n\n\n\nA carteira foi estruturada com base nos seguintes critérios:\n\nDiversificação dentro do setor tecnológico: Embora todas sejam empresas de tecnologia, cada uma atua em segmentos distintos - hardware, software, redes sociais, comércio eletrônico, veículos elétricos e inteligência artificial.\nExposição à inovação: Todas as empresas selecionadas investem fortemente em pesquisa e desenvolvimento, com foco em tecnologias emergentes como inteligência artificial, realidade aumentada, computação em nuvem e veículos autônomos.\nLiderança de mercado: Todas são líderes em seus respectivos segmentos, com forte presença global e vantagens competitivas significativas.\nPotencial de crescimento: Apesar de já serem empresas consolidadas, continuam apresentando perspectivas de crescimento em novos mercados e através de inovações disruptivas.\n\n\n\n\nPara este projeto, utilizaremos o pacote quantmod em R para coletar os dados históricos de preços das ações selecionadas. Vamos coletar dados dos últimos 2 anos:\n\n\nCode\n# Carregando as bibliotecas necessárias\nlibrary(quantmod)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(corrplot)\nlibrary(RColorBrewer)\nlibrary(scales)\n\n# Definindo os tickers da nossa carteira\ntickers &lt;- c(\"NVDA\", \"AAPL\", \"TSLA\", \"META\", \"AMZN\", \"MSFT\")\n\n# Definindo o período de análise (últimos 2 anos)\nend_date &lt;- Sys.Date()\nstart_date &lt;- end_date - 365*2\n\n# Configurando o ambiente gráfico\noptions(repr.plot.width = 12, repr.plot.height = 8)\n\n# Função para adicionar sufixo ao ticker para Yahoo Finance\nadd_yahoo_suffix &lt;- function(ticker) {\n  return(paste0(ticker, \".US\"))\n}\n\n# Coletando dados históricos\ngetSymbols(tickers, src = \"yahoo\", from = start_date, to = end_date)\n\n\n[1] \"NVDA\" \"AAPL\" \"TSLA\" \"META\" \"AMZN\" \"MSFT\"\n\n\nCode\n# Exibindo as primeiras linhas dos dados da NVIDIA como exemplo\nhead(NVDA)\n\n\n           NVDA.Open NVDA.High NVDA.Low NVDA.Close NVDA.Volume NVDA.Adjusted\n2023-04-06    26.584    27.080   26.427     27.037   397654000      27.01945\n2023-04-10    26.823    27.621   26.669     27.579   395279000      27.56110\n2023-04-11    27.724    27.790   27.126     27.169   314378000      27.15137\n2023-04-12    27.370    27.468   26.448     26.495   446259000      26.47780\n2023-04-13    26.734    26.887   26.329     26.463   353615000      26.44582\n2023-04-14    26.504    26.883   26.220     26.758   395660000      26.74063\n\n\n\n\n\nVamos organizar os dados para facilitar as análises:\n\n\nCode\n# Função para extrair preços de fechamento ajustados\nget_adjusted_prices &lt;- function(ticker) {\n  return(Ad(get(ticker)))\n}\n\n# Criando um dataframe com os preços de fechamento ajustados\nclosing_prices &lt;- do.call(merge, lapply(tickers, get_adjusted_prices))\ncolnames(closing_prices) &lt;- tickers\n\n# Visualizando as primeiras linhas\nhead(closing_prices)\n\n\n               NVDA     AAPL   TSLA     META   AMZN     MSFT\n2023-04-06 27.01945 163.0160 185.06 215.0863 102.06 287.0349\n2023-04-10 27.56110 160.4123 184.51 213.7426 102.17 284.8595\n2023-04-11 27.15137 159.1945 186.79 212.8469  99.92 278.4021\n2023-04-12 26.47780 158.5016 180.54 212.9961  97.83 279.0518\n2023-04-13 26.44582 163.9070 185.90 219.3163 102.40 285.3023\n2023-04-14 26.74063 163.5605 185.00 220.4510 102.51 281.6603\n\n\nCode\n# Convertendo para dataframe para facilitar algumas manipulações\nclosing_prices_df &lt;- as.data.frame(closing_prices)\nclosing_prices_df$date &lt;- as.Date(rownames(closing_prices_df))\n\n\n\n\n\nVamos visualizar a evolução dos preços de fechamento ajustados para cada ativo ao longo do tempo:\n\n\nCode\n# Transformando os dados para o formato longo (tidy)\nprices_long &lt;- closing_prices_df %&gt;%\n  pivot_longer(cols = all_of(tickers), \n               names_to = \"symbol\", \n               values_to = \"price\")\n\n# Plotando os preços de fechamento ajustados\nggplot(prices_long, aes(x = date, y = price, color = symbol)) +\n  geom_line(linewidth = 1) +\n  labs(title = \"Preços de Fechamento Ajustados\",\n       x = \"Data\", \n       y = \"Preço ($)\",\n       color = \"Ticker\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10)\n  ) +\n  scale_y_continuous(labels = dollar_format())\n\n\n\n\n\n\n\n\n\nPara facilitar a comparação entre os ativos, vamos normalizar os preços para base 100:\n\n\nCode\n# Calculando preços normalizados\nfirst_prices &lt;- closing_prices_df[1, tickers]\nnormalized_prices &lt;- closing_prices_df\n\nfor (ticker in tickers) {\n  normalized_prices[[ticker]] &lt;- closing_prices_df[[ticker]] / first_prices[[ticker]] * 100\n}\n\n# Transformando para o formato longo\nnormalized_long &lt;- normalized_prices %&gt;%\n  pivot_longer(cols = all_of(tickers), \n               names_to = \"symbol\", \n               values_to = \"normalized_price\")\n\n# Plotando os preços normalizados\nggplot(normalized_long, aes(x = date, y = normalized_price, color = symbol)) +\n  geom_line(linewidth = 1) +\n  labs(title = \"Preços Normalizados (Base 100)\",\n       x = \"Data\", \n       y = \"Preço Normalizado\",\n       color = \"Ticker\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nVamos calcular e visualizar os retornos diários, bem como algumas estatísticas importantes:\n\n\nCode\n# Calculando retornos diários\nreturns &lt;- ROC(closing_prices, type = \"discrete\", n = 1)\nreturns &lt;- returns[-1,]  # Removendo a primeira linha (NA)\n\n# Exibindo estatísticas descritivas\nreturns_stats &lt;- data.frame(\n  Ticker = tickers,\n  Mínimo = apply(returns, 2, min, na.rm = TRUE),\n  Q1 = apply(returns, 2, function(x) quantile(x, 0.25, na.rm = TRUE)),\n  Mediana = apply(returns, 2, median, na.rm = TRUE),\n  Média = apply(returns, 2, mean, na.rm = TRUE),\n  Q3 = apply(returns, 2, function(x) quantile(x, 0.75, na.rm = TRUE)),\n  Máximo = apply(returns, 2, max, na.rm = TRUE),\n  Volatilidade_Diária = apply(returns, 2, sd, na.rm = TRUE),\n  Volatilidade_Anual = apply(returns, 2, sd, na.rm = TRUE) * sqrt(252)\n)\n\n# Formatando os números para percentuais\nreturns_stats[, 2:9] &lt;- round(returns_stats[, 2:9] * 100, 2)\n\n# Exibindo estatísticas\nknitr::kable(returns_stats, caption = \"Estatísticas dos Retornos Diários (%)\")\n\n\n\nEstatísticas dos Retornos Diários (%)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTicker\nMínimo\nQ1\nMediana\nMédia\nQ3\nMáximo\nVolatilidade_Diária\nVolatilidade_Anual\n\n\n\n\nNVDA\nNVDA\n-16.97\n-1.60\n0.32\n0.30\n2.20\n24.37\n3.32\n52.70\n\n\nAAPL\nAAPL\n-9.25\n-0.69\n0.12\n0.04\n0.82\n7.26\n1.49\n23.69\n\n\nTSLA\nTSLA\n-15.43\n-2.01\n0.05\n0.12\n2.08\n21.92\n3.77\n59.89\n\n\nMETA\nMETA\n-10.56\n-0.91\n0.15\n0.19\n1.29\n20.32\n2.20\n35.00\n\n\nAMZN\nAMZN\n-8.98\n-0.90\n0.07\n0.12\n1.30\n8.27\n1.89\n30.07\n\n\nMSFT\nMSFT\n-6.18\n-0.71\n0.12\n0.05\n0.92\n7.24\n1.39\n22.09\n\n\n\n\n\n\n\nVamos visualizar a distribuição dos retornos diários para cada ativo:\n\n\nCode\n# Convertendo returns para dataframe\nreturns_df &lt;- as.data.frame(returns)\nreturns_df$date &lt;- as.Date(rownames(returns_df))\n\n# Transformando para o formato longo\nreturns_long &lt;- returns_df %&gt;%\n  pivot_longer(cols = all_of(tickers), \n               names_to = \"symbol\", \n               values_to = \"return\")\n\n# Plotando histogramas dos retornos\nggplot(returns_long, aes(x = return)) +\n  geom_histogram(aes(y = ..density..), bins = 30, fill = \"steelblue\", alpha = 0.7) +\n  geom_density(color = \"red\", linewidth = 1) +\n  geom_vline(aes(xintercept = mean(return, na.rm = TRUE)), \n             color = \"darkred\", linetype = \"dashed\", linewidth = 1) +\n  facet_wrap(~symbol, scales = \"free_y\", ncol = 2) +\n  labs(title = \"Distribuição dos Retornos Diários\",\n       x = \"Retorno Diário\", \n       y = \"Densidade\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    strip.text = element_text(size = 12, face = \"bold\")\n  ) +\n  scale_x_continuous(labels = percent_format())\n\n\n\n\n\n\n\n\n\n\n\n\n\nVamos analisar a correlação entre os retornos das ações para entender como esses ativos se movimentam em relação uns aos outros:\n\n\nCode\n# Calculando a matriz de correlação\ncorrelation_matrix &lt;- cor(returns, use = \"complete.obs\")\n\n# Visualizando a matriz de correlação\ncorrplot(correlation_matrix, method = \"color\", \n         type = \"upper\", order = \"hclust\", \n         addCoef.col = \"black\", \n         tl.col = \"black\", tl.srt = 45,\n         col = brewer.pal(n = 8, name = \"RdYlBu\"),\n         title = \"Matriz de Correlação dos Retornos Diários\",\n         mar = c(0,0,2,0))\n\n\n\n\n\n\n\n\n\n\n\n\nVamos comparar o risco (volatilidade) e o retorno médio anualizado de cada ativo:\n\n\nCode\n# Calculando retornos médios anualizados e volatilidade anualizada\nmean_return &lt;- colMeans(returns, na.rm = TRUE) * 252\nvolatility &lt;- apply(returns, 2, sd, na.rm = TRUE) * sqrt(252)\n\n# Criando um dataframe para visualização\nrisk_return &lt;- data.frame(\n  Ticker = tickers,\n  Retorno_Anualizado = mean_return,\n  Volatilidade = volatility\n)\n\n# Exibindo a tabela\nknitr::kable(risk_return, digits = 4, \n             col.names = c(\"Ticker\", \"Retorno Anualizado\", \"Volatilidade\"),\n             caption = \"Análise de Risco-Retorno\")\n\n\n\nAnálise de Risco-Retorno\n\n\n\nTicker\nRetorno Anualizado\nVolatilidade\n\n\n\n\nNVDA\nNVDA\n0.7678\n0.5270\n\n\nAAPL\nAAPL\n0.1011\n0.2369\n\n\nTSLA\nTSLA\n0.3074\n0.5989\n\n\nMETA\nMETA\n0.4902\n0.3500\n\n\nAMZN\nAMZN\n0.3054\n0.3007\n\n\nMSFT\nMSFT\n0.1384\n0.2209\n\n\n\n\n\n\n\n\n\nCode\n# Calculando médias para divisão dos quadrantes\navg_ret &lt;- mean(risk_return$Retorno_Anualizado)\navg_vol &lt;- mean(risk_return$Volatilidade)\n\n# Criando o gráfico de risco x retorno\nggplot(risk_return, aes(x = Volatilidade, y = Retorno_Anualizado)) +\n  geom_point(aes(color = Ticker), size = 5) +\n  geom_text(aes(label = Ticker), hjust = -0.3, vjust = 0, size = 4) +\n  geom_hline(yintercept = avg_ret, linetype = \"dashed\", color = \"red\", alpha = 0.5) +\n  geom_vline(xintercept = avg_vol, linetype = \"dashed\", color = \"red\", alpha = 0.5) +\n  annotate(\"text\", x = avg_vol * 1.05, y = avg_ret * 1.05, \n           label = \"Alto Retorno\\nAlto Risco\", \n           hjust = 0, vjust = 0, size = 3.5) +\n  annotate(\"text\", x = avg_vol * 0.95, y = avg_ret * 1.05, \n           label = \"Alto Retorno\\nBaixo Risco\", \n           hjust = 1, vjust = 0, size = 3.5) +\n  annotate(\"text\", x = avg_vol * 1.05, y = avg_ret * 0.95, \n           label = \"Baixo Retorno\\nAlto Risco\", \n           hjust = 0, vjust = 1, size = 3.5) +\n  annotate(\"text\", x = avg_vol * 0.95, y = avg_ret * 0.95, \n           label = \"Baixo Retorno\\nBaixo Risco\", \n           hjust = 1, vjust = 1, size = 3.5) +\n  labs(title = \"Análise de Risco x Retorno\",\n       x = \"Risco (Volatilidade Anualizada)\", \n       y = \"Retorno Médio Anualizado\",\n       color = \"Ticker\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.position = \"top\"\n  ) +\n  scale_y_continuous(labels = percent_format()) +\n  scale_x_continuous(labels = percent_format())\n\n\n\n\n\n\n\n\n\n\n\n\n\nVamos calcular e visualizar o retorno cumulativo para cada ativo:\n\n\nCode\n# Calculando retorno cumulativo\ncumulative_returns &lt;- cumprod(1 + returns) - 1\n\n# Convertendo para dataframe\ncumret_df &lt;- as.data.frame(cumulative_returns)\ncumret_df$date &lt;- as.Date(rownames(cumret_df))\n\n# Transformando para o formato longo\ncumret_long &lt;- cumret_df %&gt;%\n  pivot_longer(cols = all_of(tickers), \n               names_to = \"symbol\", \n               values_to = \"cum_return\")\n\n# Plotando retorno cumulativo\nggplot(cumret_long, aes(x = date, y = cum_return, color = symbol)) +\n  geom_line(linewidth = 1) +\n  labs(title = \"Retorno Cumulativo\",\n       x = \"Data\", \n       y = \"Retorno Cumulativo\",\n       color = \"Ticker\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10)\n  ) +\n  scale_y_continuous(labels = percent_format())\n\n\n\n\n\n\n\n\n\n\n\n\nVamos analisar o volume de negociação para cada ativo:\n\n\nCode\n# Função para extrair volume\nget_volume &lt;- function(ticker) {\n  return(Vo(get(ticker)))\n}\n\n# Obtendo dados de volume\nvolumes &lt;- do.call(merge, lapply(tickers, get_volume))\ncolnames(volumes) &lt;- tickers\n\n# Calculando volume médio diário\navg_volume &lt;- colMeans(volumes, na.rm = TRUE)\navg_volume_df &lt;- data.frame(\n  Ticker = tickers,\n  Volume_Medio = avg_volume\n)\n\n# Ordenando por volume\navg_volume_df &lt;- avg_volume_df[order(avg_volume_df$Volume_Medio, decreasing = TRUE), ]\navg_volume_df$Ticker &lt;- factor(avg_volume_df$Ticker, levels = avg_volume_df$Ticker)\n\n# Plotando o volume médio de negociação\nggplot(avg_volume_df, aes(x = Ticker, y = Volume_Medio / 1e6)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  geom_text(aes(label = sprintf(\"%.1f M\", Volume_Medio / 1e6)), \n            vjust = -0.5, size = 4) +\n  labs(title = \"Volume Médio Diário de Negociação\",\n       x = \"Ticker\", \n       y = \"Volume Médio (Milhões)\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    axis.text.x = element_text(size = 10, angle = 0)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nVamos calcular a volatilidade móvel para analisar como a volatilidade de cada ativo evolui ao longo do tempo:\n\n\nCode\n# Função para calcular volatilidade móvel\ncalculate_rolling_vol &lt;- function(returns_xts, window_size = 30) {\n  roll_vol &lt;- rollapply(returns_xts, width = window_size, \n                        FUN = function(x) sd(x, na.rm = TRUE) * sqrt(252),\n                        by.column = TRUE, align = \"right\")\n  return(roll_vol)\n}\n\n# Calculando volatilidade móvel (janela de 30 dias)\nrolling_vol &lt;- calculate_rolling_vol(returns, window_size = 30)\n\n# Convertendo para dataframe\nroll_vol_df &lt;- as.data.frame(rolling_vol)\nroll_vol_df$date &lt;- as.Date(rownames(roll_vol_df))\n\n# Transformando para o formato longo\nroll_vol_long &lt;- roll_vol_df %&gt;%\n  pivot_longer(cols = all_of(tickers), \n               names_to = \"symbol\", \n               values_to = \"volatility\")\n\n# Plotando a volatilidade móvel\nggplot(roll_vol_long, aes(x = date, y = volatility, color = symbol)) +\n  geom_line(linewidth = 1) +\n  labs(title = \"Volatilidade Móvel (30 dias)\",\n       x = \"Data\", \n       y = \"Volatilidade Anualizada\",\n       color = \"Ticker\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10)\n  ) +\n  scale_y_continuous(labels = percent_format())\n\n\n\n\n\n\n\n\n\n\n\n\nO Índice Sharpe é uma medida importante que ajuda a avaliar o retorno ajustado ao risco:\n\n\nCode\n# Assumindo taxa livre de risco de 4% ao ano\nrisk_free_rate &lt;- 0.04/252\n\n# Calculando Sharpe Ratio para cada ativo\nsharpe_ratio &lt;- (colMeans(returns, na.rm = TRUE) - risk_free_rate) / \n                 apply(returns, 2, sd, na.rm = TRUE) * sqrt(252)\n\nsharpe_df &lt;- data.frame(\n  Ticker = tickers,\n  Sharpe_Ratio = sharpe_ratio\n)\n\n# Ordenando por Sharpe Ratio\nsharpe_df &lt;- sharpe_df[order(sharpe_df$Sharpe_Ratio, decreasing = TRUE), ]\nsharpe_df$Ticker &lt;- factor(sharpe_df$Ticker, levels = sharpe_df$Ticker)\n\n# Plotando o Sharpe Ratio\nggplot(sharpe_df, aes(x = Ticker, y = Sharpe_Ratio)) +\n  geom_bar(stat = \"identity\", fill = \"darkgreen\") +\n  geom_text(aes(label = sprintf(\"%.2f\", Sharpe_Ratio)), \n            vjust = -0.5, size = 4) +\n  labs(title = \"Índice de Sharpe (Anualizado)\",\n       subtitle = \"Taxa livre de risco = 4%\",\n       x = \"Ticker\", \n       y = \"Sharpe Ratio\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    plot.subtitle = element_text(size = 12),\n    axis.title = element_text(size = 12),\n    axis.text.x = element_text(size = 10, angle = 0)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nNa próxima etapa do projeto, iremos:\n\nRealizar uma análise mais aprofundada do desempenho histórico desses ativos\nCalcular métricas adicionais como Sortino Ratio e Maximum Drawdown\nOtimizar a alocação de ativos usando técnicas como a Teoria Moderna de Portfólio\nRealizar backtesting de diferentes estratégias de rebalanceamento\nAnalisar a exposição da carteira a diferentes fatores de risco\n\n\n\n\nCom base nas análises realizadas, podemos destacar os seguintes pontos:\n\nDesempenho: Observamos diferenças significativas no desempenho dos ativos selecionados, com alguns apresentando retornos superiores à média do grupo.\nCorrelação: A matriz de correlação mostra que, apesar de todas serem empresas de tecnologia, há diversificação significativa dentro da carteira.\nRisco-Retorno: O gráfico de risco x retorno nos permite identificar quais ativos oferecem melhor relação entre retorno e volatilidade.\nVolatilidade: A análise de volatilidade móvel mostra períodos de maior e menor instabilidade no mercado, afetando todos os ativos.\nEficiência: A análise do Índice de Sharpe revela quais ativos oferecem melhor retorno ajustado ao risco.\n\nEsta análise preliminar nos dá uma base para entender o comportamento dos ativos selecionados e a dinâmica entre eles, orientando nossas decisões futuras de investimento."
  },
  {
    "objectID": "semana1.html#introdução",
    "href": "semana1.html#introdução",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Neste projeto, analisaremos uma carteira de investimentos composta por seis empresas líderes de tecnologia. A seleção foi feita com base na relevância destas empresas no setor tecnológico, sua capitalização de mercado e potencial de crescimento."
  },
  {
    "objectID": "semana1.html#seleção-de-empresas",
    "href": "semana1.html#seleção-de-empresas",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Nossa carteira é composta pelos seguintes ativos:\n\nNVDA (NVIDIA Corporation)\nAAPL (Apple Inc.)\nTSLA (Tesla, Inc.)\nMETA (Meta Platforms, Inc.)\nAMZN (Amazon.com, Inc.)\nMSFT (Microsoft Corporation)"
  },
  {
    "objectID": "semana1.html#justificativa-da-escolha",
    "href": "semana1.html#justificativa-da-escolha",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "A carteira foi estruturada com base nos seguintes critérios:\n\nDiversificação dentro do setor tecnológico: Embora todas sejam empresas de tecnologia, cada uma atua em segmentos distintos - hardware, software, redes sociais, comércio eletrônico, veículos elétricos e inteligência artificial.\nExposição à inovação: Todas as empresas selecionadas investem fortemente em pesquisa e desenvolvimento, com foco em tecnologias emergentes como inteligência artificial, realidade aumentada, computação em nuvem e veículos autônomos.\nLiderança de mercado: Todas são líderes em seus respectivos segmentos, com forte presença global e vantagens competitivas significativas.\nPotencial de crescimento: Apesar de já serem empresas consolidadas, continuam apresentando perspectivas de crescimento em novos mercados e através de inovações disruptivas."
  },
  {
    "objectID": "semana1.html#coleta-de-dados",
    "href": "semana1.html#coleta-de-dados",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Para este projeto, utilizaremos o pacote quantmod em R para coletar os dados históricos de preços das ações selecionadas. Vamos coletar dados dos últimos 2 anos:\n\n\nCode\n# Carregando as bibliotecas necessárias\nlibrary(quantmod)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(corrplot)\nlibrary(RColorBrewer)\nlibrary(scales)\n\n# Definindo os tickers da nossa carteira\ntickers &lt;- c(\"NVDA\", \"AAPL\", \"TSLA\", \"META\", \"AMZN\", \"MSFT\")\n\n# Definindo o período de análise (últimos 2 anos)\nend_date &lt;- Sys.Date()\nstart_date &lt;- end_date - 365*2\n\n# Configurando o ambiente gráfico\noptions(repr.plot.width = 12, repr.plot.height = 8)\n\n# Função para adicionar sufixo ao ticker para Yahoo Finance\nadd_yahoo_suffix &lt;- function(ticker) {\n  return(paste0(ticker, \".US\"))\n}\n\n# Coletando dados históricos\ngetSymbols(tickers, src = \"yahoo\", from = start_date, to = end_date)\n\n\n[1] \"NVDA\" \"AAPL\" \"TSLA\" \"META\" \"AMZN\" \"MSFT\"\n\n\nCode\n# Exibindo as primeiras linhas dos dados da NVIDIA como exemplo\nhead(NVDA)\n\n\n           NVDA.Open NVDA.High NVDA.Low NVDA.Close NVDA.Volume NVDA.Adjusted\n2023-04-06    26.584    27.080   26.427     27.037   397654000      27.01945\n2023-04-10    26.823    27.621   26.669     27.579   395279000      27.56110\n2023-04-11    27.724    27.790   27.126     27.169   314378000      27.15137\n2023-04-12    27.370    27.468   26.448     26.495   446259000      26.47780\n2023-04-13    26.734    26.887   26.329     26.463   353615000      26.44582\n2023-04-14    26.504    26.883   26.220     26.758   395660000      26.74063"
  },
  {
    "objectID": "semana1.html#preparação-dos-dados",
    "href": "semana1.html#preparação-dos-dados",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Vamos organizar os dados para facilitar as análises:\n\n\nCode\n# Função para extrair preços de fechamento ajustados\nget_adjusted_prices &lt;- function(ticker) {\n  return(Ad(get(ticker)))\n}\n\n# Criando um dataframe com os preços de fechamento ajustados\nclosing_prices &lt;- do.call(merge, lapply(tickers, get_adjusted_prices))\ncolnames(closing_prices) &lt;- tickers\n\n# Visualizando as primeiras linhas\nhead(closing_prices)\n\n\n               NVDA     AAPL   TSLA     META   AMZN     MSFT\n2023-04-06 27.01945 163.0160 185.06 215.0863 102.06 287.0349\n2023-04-10 27.56110 160.4123 184.51 213.7426 102.17 284.8595\n2023-04-11 27.15137 159.1945 186.79 212.8469  99.92 278.4021\n2023-04-12 26.47780 158.5016 180.54 212.9961  97.83 279.0518\n2023-04-13 26.44582 163.9070 185.90 219.3163 102.40 285.3023\n2023-04-14 26.74063 163.5605 185.00 220.4510 102.51 281.6603\n\n\nCode\n# Convertendo para dataframe para facilitar algumas manipulações\nclosing_prices_df &lt;- as.data.frame(closing_prices)\nclosing_prices_df$date &lt;- as.Date(rownames(closing_prices_df))"
  },
  {
    "objectID": "semana1.html#análise-da-evolução-dos-preços",
    "href": "semana1.html#análise-da-evolução-dos-preços",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Vamos visualizar a evolução dos preços de fechamento ajustados para cada ativo ao longo do tempo:\n\n\nCode\n# Transformando os dados para o formato longo (tidy)\nprices_long &lt;- closing_prices_df %&gt;%\n  pivot_longer(cols = all_of(tickers), \n               names_to = \"symbol\", \n               values_to = \"price\")\n\n# Plotando os preços de fechamento ajustados\nggplot(prices_long, aes(x = date, y = price, color = symbol)) +\n  geom_line(linewidth = 1) +\n  labs(title = \"Preços de Fechamento Ajustados\",\n       x = \"Data\", \n       y = \"Preço ($)\",\n       color = \"Ticker\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10)\n  ) +\n  scale_y_continuous(labels = dollar_format())\n\n\n\n\n\n\n\n\n\nPara facilitar a comparação entre os ativos, vamos normalizar os preços para base 100:\n\n\nCode\n# Calculando preços normalizados\nfirst_prices &lt;- closing_prices_df[1, tickers]\nnormalized_prices &lt;- closing_prices_df\n\nfor (ticker in tickers) {\n  normalized_prices[[ticker]] &lt;- closing_prices_df[[ticker]] / first_prices[[ticker]] * 100\n}\n\n# Transformando para o formato longo\nnormalized_long &lt;- normalized_prices %&gt;%\n  pivot_longer(cols = all_of(tickers), \n               names_to = \"symbol\", \n               values_to = \"normalized_price\")\n\n# Plotando os preços normalizados\nggplot(normalized_long, aes(x = date, y = normalized_price, color = symbol)) +\n  geom_line(linewidth = 1) +\n  labs(title = \"Preços Normalizados (Base 100)\",\n       x = \"Data\", \n       y = \"Preço Normalizado\",\n       color = \"Ticker\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10)\n  )"
  },
  {
    "objectID": "semana1.html#análise-de-retornos",
    "href": "semana1.html#análise-de-retornos",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Vamos calcular e visualizar os retornos diários, bem como algumas estatísticas importantes:\n\n\nCode\n# Calculando retornos diários\nreturns &lt;- ROC(closing_prices, type = \"discrete\", n = 1)\nreturns &lt;- returns[-1,]  # Removendo a primeira linha (NA)\n\n# Exibindo estatísticas descritivas\nreturns_stats &lt;- data.frame(\n  Ticker = tickers,\n  Mínimo = apply(returns, 2, min, na.rm = TRUE),\n  Q1 = apply(returns, 2, function(x) quantile(x, 0.25, na.rm = TRUE)),\n  Mediana = apply(returns, 2, median, na.rm = TRUE),\n  Média = apply(returns, 2, mean, na.rm = TRUE),\n  Q3 = apply(returns, 2, function(x) quantile(x, 0.75, na.rm = TRUE)),\n  Máximo = apply(returns, 2, max, na.rm = TRUE),\n  Volatilidade_Diária = apply(returns, 2, sd, na.rm = TRUE),\n  Volatilidade_Anual = apply(returns, 2, sd, na.rm = TRUE) * sqrt(252)\n)\n\n# Formatando os números para percentuais\nreturns_stats[, 2:9] &lt;- round(returns_stats[, 2:9] * 100, 2)\n\n# Exibindo estatísticas\nknitr::kable(returns_stats, caption = \"Estatísticas dos Retornos Diários (%)\")\n\n\n\nEstatísticas dos Retornos Diários (%)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTicker\nMínimo\nQ1\nMediana\nMédia\nQ3\nMáximo\nVolatilidade_Diária\nVolatilidade_Anual\n\n\n\n\nNVDA\nNVDA\n-16.97\n-1.60\n0.32\n0.30\n2.20\n24.37\n3.32\n52.70\n\n\nAAPL\nAAPL\n-9.25\n-0.69\n0.12\n0.04\n0.82\n7.26\n1.49\n23.69\n\n\nTSLA\nTSLA\n-15.43\n-2.01\n0.05\n0.12\n2.08\n21.92\n3.77\n59.89\n\n\nMETA\nMETA\n-10.56\n-0.91\n0.15\n0.19\n1.29\n20.32\n2.20\n35.00\n\n\nAMZN\nAMZN\n-8.98\n-0.90\n0.07\n0.12\n1.30\n8.27\n1.89\n30.07\n\n\nMSFT\nMSFT\n-6.18\n-0.71\n0.12\n0.05\n0.92\n7.24\n1.39\n22.09\n\n\n\n\n\n\n\nVamos visualizar a distribuição dos retornos diários para cada ativo:\n\n\nCode\n# Convertendo returns para dataframe\nreturns_df &lt;- as.data.frame(returns)\nreturns_df$date &lt;- as.Date(rownames(returns_df))\n\n# Transformando para o formato longo\nreturns_long &lt;- returns_df %&gt;%\n  pivot_longer(cols = all_of(tickers), \n               names_to = \"symbol\", \n               values_to = \"return\")\n\n# Plotando histogramas dos retornos\nggplot(returns_long, aes(x = return)) +\n  geom_histogram(aes(y = ..density..), bins = 30, fill = \"steelblue\", alpha = 0.7) +\n  geom_density(color = \"red\", linewidth = 1) +\n  geom_vline(aes(xintercept = mean(return, na.rm = TRUE)), \n             color = \"darkred\", linetype = \"dashed\", linewidth = 1) +\n  facet_wrap(~symbol, scales = \"free_y\", ncol = 2) +\n  labs(title = \"Distribuição dos Retornos Diários\",\n       x = \"Retorno Diário\", \n       y = \"Densidade\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    strip.text = element_text(size = 12, face = \"bold\")\n  ) +\n  scale_x_continuous(labels = percent_format())"
  },
  {
    "objectID": "semana1.html#análise-de-correlação",
    "href": "semana1.html#análise-de-correlação",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Vamos analisar a correlação entre os retornos das ações para entender como esses ativos se movimentam em relação uns aos outros:\n\n\nCode\n# Calculando a matriz de correlação\ncorrelation_matrix &lt;- cor(returns, use = \"complete.obs\")\n\n# Visualizando a matriz de correlação\ncorrplot(correlation_matrix, method = \"color\", \n         type = \"upper\", order = \"hclust\", \n         addCoef.col = \"black\", \n         tl.col = \"black\", tl.srt = 45,\n         col = brewer.pal(n = 8, name = \"RdYlBu\"),\n         title = \"Matriz de Correlação dos Retornos Diários\",\n         mar = c(0,0,2,0))"
  },
  {
    "objectID": "semana1.html#análise-de-risco-e-retorno",
    "href": "semana1.html#análise-de-risco-e-retorno",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Vamos comparar o risco (volatilidade) e o retorno médio anualizado de cada ativo:\n\n\nCode\n# Calculando retornos médios anualizados e volatilidade anualizada\nmean_return &lt;- colMeans(returns, na.rm = TRUE) * 252\nvolatility &lt;- apply(returns, 2, sd, na.rm = TRUE) * sqrt(252)\n\n# Criando um dataframe para visualização\nrisk_return &lt;- data.frame(\n  Ticker = tickers,\n  Retorno_Anualizado = mean_return,\n  Volatilidade = volatility\n)\n\n# Exibindo a tabela\nknitr::kable(risk_return, digits = 4, \n             col.names = c(\"Ticker\", \"Retorno Anualizado\", \"Volatilidade\"),\n             caption = \"Análise de Risco-Retorno\")\n\n\n\nAnálise de Risco-Retorno\n\n\n\nTicker\nRetorno Anualizado\nVolatilidade\n\n\n\n\nNVDA\nNVDA\n0.7678\n0.5270\n\n\nAAPL\nAAPL\n0.1011\n0.2369\n\n\nTSLA\nTSLA\n0.3074\n0.5989\n\n\nMETA\nMETA\n0.4902\n0.3500\n\n\nAMZN\nAMZN\n0.3054\n0.3007\n\n\nMSFT\nMSFT\n0.1384\n0.2209\n\n\n\n\n\n\n\n\n\nCode\n# Calculando médias para divisão dos quadrantes\navg_ret &lt;- mean(risk_return$Retorno_Anualizado)\navg_vol &lt;- mean(risk_return$Volatilidade)\n\n# Criando o gráfico de risco x retorno\nggplot(risk_return, aes(x = Volatilidade, y = Retorno_Anualizado)) +\n  geom_point(aes(color = Ticker), size = 5) +\n  geom_text(aes(label = Ticker), hjust = -0.3, vjust = 0, size = 4) +\n  geom_hline(yintercept = avg_ret, linetype = \"dashed\", color = \"red\", alpha = 0.5) +\n  geom_vline(xintercept = avg_vol, linetype = \"dashed\", color = \"red\", alpha = 0.5) +\n  annotate(\"text\", x = avg_vol * 1.05, y = avg_ret * 1.05, \n           label = \"Alto Retorno\\nAlto Risco\", \n           hjust = 0, vjust = 0, size = 3.5) +\n  annotate(\"text\", x = avg_vol * 0.95, y = avg_ret * 1.05, \n           label = \"Alto Retorno\\nBaixo Risco\", \n           hjust = 1, vjust = 0, size = 3.5) +\n  annotate(\"text\", x = avg_vol * 1.05, y = avg_ret * 0.95, \n           label = \"Baixo Retorno\\nAlto Risco\", \n           hjust = 0, vjust = 1, size = 3.5) +\n  annotate(\"text\", x = avg_vol * 0.95, y = avg_ret * 0.95, \n           label = \"Baixo Retorno\\nBaixo Risco\", \n           hjust = 1, vjust = 1, size = 3.5) +\n  labs(title = \"Análise de Risco x Retorno\",\n       x = \"Risco (Volatilidade Anualizada)\", \n       y = \"Retorno Médio Anualizado\",\n       color = \"Ticker\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.position = \"top\"\n  ) +\n  scale_y_continuous(labels = percent_format()) +\n  scale_x_continuous(labels = percent_format())"
  },
  {
    "objectID": "semana1.html#análise-de-desempenho-cumulativo",
    "href": "semana1.html#análise-de-desempenho-cumulativo",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Vamos calcular e visualizar o retorno cumulativo para cada ativo:\n\n\nCode\n# Calculando retorno cumulativo\ncumulative_returns &lt;- cumprod(1 + returns) - 1\n\n# Convertendo para dataframe\ncumret_df &lt;- as.data.frame(cumulative_returns)\ncumret_df$date &lt;- as.Date(rownames(cumret_df))\n\n# Transformando para o formato longo\ncumret_long &lt;- cumret_df %&gt;%\n  pivot_longer(cols = all_of(tickers), \n               names_to = \"symbol\", \n               values_to = \"cum_return\")\n\n# Plotando retorno cumulativo\nggplot(cumret_long, aes(x = date, y = cum_return, color = symbol)) +\n  geom_line(linewidth = 1) +\n  labs(title = \"Retorno Cumulativo\",\n       x = \"Data\", \n       y = \"Retorno Cumulativo\",\n       color = \"Ticker\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10)\n  ) +\n  scale_y_continuous(labels = percent_format())"
  },
  {
    "objectID": "semana1.html#volume-de-negociação",
    "href": "semana1.html#volume-de-negociação",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Vamos analisar o volume de negociação para cada ativo:\n\n\nCode\n# Função para extrair volume\nget_volume &lt;- function(ticker) {\n  return(Vo(get(ticker)))\n}\n\n# Obtendo dados de volume\nvolumes &lt;- do.call(merge, lapply(tickers, get_volume))\ncolnames(volumes) &lt;- tickers\n\n# Calculando volume médio diário\navg_volume &lt;- colMeans(volumes, na.rm = TRUE)\navg_volume_df &lt;- data.frame(\n  Ticker = tickers,\n  Volume_Medio = avg_volume\n)\n\n# Ordenando por volume\navg_volume_df &lt;- avg_volume_df[order(avg_volume_df$Volume_Medio, decreasing = TRUE), ]\navg_volume_df$Ticker &lt;- factor(avg_volume_df$Ticker, levels = avg_volume_df$Ticker)\n\n# Plotando o volume médio de negociação\nggplot(avg_volume_df, aes(x = Ticker, y = Volume_Medio / 1e6)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  geom_text(aes(label = sprintf(\"%.1f M\", Volume_Medio / 1e6)), \n            vjust = -0.5, size = 4) +\n  labs(title = \"Volume Médio Diário de Negociação\",\n       x = \"Ticker\", \n       y = \"Volume Médio (Milhões)\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    axis.text.x = element_text(size = 10, angle = 0)\n  )"
  },
  {
    "objectID": "semana1.html#análise-de-volatilidade-ao-longo-do-tempo",
    "href": "semana1.html#análise-de-volatilidade-ao-longo-do-tempo",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Vamos calcular a volatilidade móvel para analisar como a volatilidade de cada ativo evolui ao longo do tempo:\n\n\nCode\n# Função para calcular volatilidade móvel\ncalculate_rolling_vol &lt;- function(returns_xts, window_size = 30) {\n  roll_vol &lt;- rollapply(returns_xts, width = window_size, \n                        FUN = function(x) sd(x, na.rm = TRUE) * sqrt(252),\n                        by.column = TRUE, align = \"right\")\n  return(roll_vol)\n}\n\n# Calculando volatilidade móvel (janela de 30 dias)\nrolling_vol &lt;- calculate_rolling_vol(returns, window_size = 30)\n\n# Convertendo para dataframe\nroll_vol_df &lt;- as.data.frame(rolling_vol)\nroll_vol_df$date &lt;- as.Date(rownames(roll_vol_df))\n\n# Transformando para o formato longo\nroll_vol_long &lt;- roll_vol_df %&gt;%\n  pivot_longer(cols = all_of(tickers), \n               names_to = \"symbol\", \n               values_to = \"volatility\")\n\n# Plotando a volatilidade móvel\nggplot(roll_vol_long, aes(x = date, y = volatility, color = symbol)) +\n  geom_line(linewidth = 1) +\n  labs(title = \"Volatilidade Móvel (30 dias)\",\n       x = \"Data\", \n       y = \"Volatilidade Anualizada\",\n       color = \"Ticker\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10)\n  ) +\n  scale_y_continuous(labels = percent_format())"
  },
  {
    "objectID": "semana1.html#análise-de-sharpe-ratio",
    "href": "semana1.html#análise-de-sharpe-ratio",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "O Índice Sharpe é uma medida importante que ajuda a avaliar o retorno ajustado ao risco:\n\n\nCode\n# Assumindo taxa livre de risco de 4% ao ano\nrisk_free_rate &lt;- 0.04/252\n\n# Calculando Sharpe Ratio para cada ativo\nsharpe_ratio &lt;- (colMeans(returns, na.rm = TRUE) - risk_free_rate) / \n                 apply(returns, 2, sd, na.rm = TRUE) * sqrt(252)\n\nsharpe_df &lt;- data.frame(\n  Ticker = tickers,\n  Sharpe_Ratio = sharpe_ratio\n)\n\n# Ordenando por Sharpe Ratio\nsharpe_df &lt;- sharpe_df[order(sharpe_df$Sharpe_Ratio, decreasing = TRUE), ]\nsharpe_df$Ticker &lt;- factor(sharpe_df$Ticker, levels = sharpe_df$Ticker)\n\n# Plotando o Sharpe Ratio\nggplot(sharpe_df, aes(x = Ticker, y = Sharpe_Ratio)) +\n  geom_bar(stat = \"identity\", fill = \"darkgreen\") +\n  geom_text(aes(label = sprintf(\"%.2f\", Sharpe_Ratio)), \n            vjust = -0.5, size = 4) +\n  labs(title = \"Índice de Sharpe (Anualizado)\",\n       subtitle = \"Taxa livre de risco = 4%\",\n       x = \"Ticker\", \n       y = \"Sharpe Ratio\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    plot.subtitle = element_text(size = 12),\n    axis.title = element_text(size = 12),\n    axis.text.x = element_text(size = 10, angle = 0)\n  )"
  },
  {
    "objectID": "semana1.html#próximos-passos",
    "href": "semana1.html#próximos-passos",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Na próxima etapa do projeto, iremos:\n\nRealizar uma análise mais aprofundada do desempenho histórico desses ativos\nCalcular métricas adicionais como Sortino Ratio e Maximum Drawdown\nOtimizar a alocação de ativos usando técnicas como a Teoria Moderna de Portfólio\nRealizar backtesting de diferentes estratégias de rebalanceamento\nAnalisar a exposição da carteira a diferentes fatores de risco"
  },
  {
    "objectID": "semana1.html#conclusões-preliminares",
    "href": "semana1.html#conclusões-preliminares",
    "title": "Análise de Carteira de Investimentos",
    "section": "",
    "text": "Com base nas análises realizadas, podemos destacar os seguintes pontos:\n\nDesempenho: Observamos diferenças significativas no desempenho dos ativos selecionados, com alguns apresentando retornos superiores à média do grupo.\nCorrelação: A matriz de correlação mostra que, apesar de todas serem empresas de tecnologia, há diversificação significativa dentro da carteira.\nRisco-Retorno: O gráfico de risco x retorno nos permite identificar quais ativos oferecem melhor relação entre retorno e volatilidade.\nVolatilidade: A análise de volatilidade móvel mostra períodos de maior e menor instabilidade no mercado, afetando todos os ativos.\nEficiência: A análise do Índice de Sharpe revela quais ativos oferecem melhor retorno ajustado ao risco.\n\nEsta análise preliminar nos dá uma base para entender o comportamento dos ativos selecionados e a dinâmica entre eles, orientando nossas decisões futuras de investimento."
  }
]